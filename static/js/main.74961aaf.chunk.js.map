{"version":3,"sources":["Redux/Reducers/UsersReducer.js","Components/Common/Preloader/Preloader.jsx","HOC/withAuthRedirect.js","accepts/images/Bean Eater-1s-200px.svg","Components/Navbar/FrindsBar/FrindBar/FriendBar.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Components/Navbar/Navbar.module.css","Redux/Selectors/UsersSelector.js","Redux/Reducers/NewsReducer.js","Api/Api.js","Components/Header/HeaderProfile/HeaderProfile.module.css","serviceWorker.js","Redux/Reducers/DialogsReducer.js","Utils/HelperStopSubmit.js","Redux/Reducers/ProfileReducer.js","Redux/Reducers/NavbarReducer.js","Redux/Reducers/AppReducer.js","Redux/ReduxStore.js","HOC/withSuspense.js","Components/Navbar/FrindsBar/FrindBar/FriendBar.jsx","Components/Navbar/FrindsBar/FriendsBar.jsx","Components/Navbar/FrindsBar/FriendsBarContainer.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/DialogsForm.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/UserDialog.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/Profile/ProfileInfo/Status/StatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfoForm.jsx","Components/Profile/ProfileInfo/ProfileDescriptionBlock.jsx","Components/Profile/ProfileInfo/ProfilePhotoInputFile.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/HeaderProfile/HeaderProfile.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Common/Preloader/AppPreloader.js","App.js","index.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Utils/Validators/validators.js","Components/Dialogs/Dialogs.module.css","Components/Common/FormsControls/FieldCreator.jsx","Redux/Reducers/AuthReducer.js","Components/Dialogs/Message/Message.module.css","Components/Common/FormsControls/FormControl.js","accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg","Components/Common/FormsControls/FormControl.module.css","Components/Common/Preloader/Preloader.module.css"],"names":["InitialState","users","friends","pageSize","totalUsersCount","totalFriendsCount","isFetching","followIsProgressing","currentPage","currentFriendPage","currentSearchTerm","toggleFollowProgressing","isProgressing","userId","type","setCurrentFriendPageAC","FriendsPage","setCurrentPageAC","page","toggleFollow","setUsers","isFriendsArray","setTotalUsersCount","isFriends","setFetching","setCurrentSearchTerm","term","requestUsers","friend","dispatch","a","UserAPI","getUsers","response","items","totalCount","FollowOrUnfollow","follow","followUser","resultCode","unfollowUser","UsersReducer","state","action","map","u","id","followed","filter","Preloader","className","s","src","PreloaderLogo","mapStateToPropsForRedirect","isAuth","Auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","UsersPage","getUsersSuper","createSelector","getActiveUserFollowed","ProfilePage","ProfileInfo","profile","getPageSize","getTotalUsersCount","getIsFetching","getFollowIsProgressing","NewsPost","Text","Avtor","Img","NewsNewsText","addNewPost","addNewText","text","newText","NewsReducer","NewPost","Id","AxiosInstance","axios","withCredentials","headers","baseURL","DialogsApi","PutDialog","put","GetDialogs","get","GetUserDialog","url","PutMessage","message","post","body","DeleteMessage","messageId","delete","Captcha","AuthApi","AuthUser","then","data","AuthLogin","email","password","rememberMe","captcha","AuthLogOut","getUserProfile","getProfileStatus","updateStatus","status","changeProfile","changeMainPhoto","photo","formData","FormData","append","Boolean","window","location","hostname","match","DialogsData","MessagesData","AddNewDialog","ShowDialogs","dialogsData","ShowMessages","messagesData","DialogReducer","newMessage","HelperStopSubmit","errorMessages","ErrorsNames","error","newElement","split","substring","length","toLowerCase","ErrorObject","i","PostsData","likecount","ProfileStatus","submitWasSuccess","success","setProfileStatus","updateProfilePhoto","getProfile","ProfileReducer","postId","photos","FriendsBarData","Name","OnOf","NavbarReducer","initialized","globalError","showGlobalError","AppReducer","Reducers","combineReducers","DialogsPage","NewsPage","NavbarPage","AuthReducer","form","formReducer","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","FriendBar","Online","activeClassName","active","FriendsBar","FrindElements","FriendsBarState","f","key","DialogItem","memo","UserDialogUrl","UserProfileUrl","UserId","DialogActive","Dialog","DialogImg","userPhoto","name","maxLength200","maxLengthCreator","SpecialTextArea","SpecialFormCreator","MessageInputReduxForm","reduxForm","submitSucceeded","reset","onSubmit","handleSubmit","FieldCreator","required","Message","useState","DeliteMode","setDeliteMode","isImSender","MessageIm","MessageFriend","viewed","MessageText","MessageTextNotViewed","onClick","Button","HiddenButton","line","UserDialog","MessagesElements","CurrentUserId","senderId","v","addedAt","UserInfo","large","Dialogs","isShowDialogsMenu","setIsShowDialogsMenu","DialogsElements","d","dialog","userName","HiddenDialogs","DialogsItem","HideButton","Messages","NewMessage","dataForm","SendMessage","messageInput","DialogContainer","params","prevProps","prevState","snapshot","userid","userID","withRouter","StatusWithHooks","editMode","setEditeMode","setStatus","useEffect","IDisCurrent","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","UpdateProfileStatus","maxLength100","SpecialInput","ContactsProfileField","ProfileInfoInputReduxForm","Object","keys","initialValues","contacts","deactivateMode","someoneError","ContactsProfile","ContactTitle","ContactValue","href","ProfileDescriptionBlock","DescriptionBlock","activateMode","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","ProfilePhotoInputFile","input__wrapper","onMainPhotoSelected","input__file","multiple","htmlFor","input__file_button","input__file_icon_wrapper","alt","width","input__file_button_text","DialogUrl","useDispatch","ProfileEditMode","setProfileEditeMode","img1","UserPhoto","inputButton","target","files","saveMainPhoto","ProfileInfoForm","UpdateProfileInfo","Post","item","deleteProfilePost","Hr","maxLength30","PostInputReduxForm","MyPosts","console","log","PostsElements","PostsState","p","PostDescription","postInput","posts","MyPostsContainer","Profile","Followed","activeUser","ProfileContainer","messages","stopSubmit","SetCurrentUserProfile","HeaderProfile","authLogOut","styles","LoginProfileHeader","login","CurrentUserPhoto","Header","header","HeaderContainer","AppPreloader","AppLoadingBlock","Music","lazy","UsersContainer","Login","Friends","Settings","NewsContainer","UserExit","catchAllErrors","reason","httpCode","errorMessage","setGlobalError","initializedApp","addEventListener","removeEventListener","SubMenu","Menu","Layout","Content","Sider","LayOut","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","icon","UserOutlined","title","Item","exact","LaptopOutlined","NotificationOutlined","padding","margin","minHeight","SuspenseMainContent","path","render","DialogsContainer","from","fallback","AppContainer","authUser","setTimeout","FirstReactApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","validate","component","placeholder","CaptchaImg","SetAuthUserData","SetCaptchaImg","ProfileResponse","authLogin","ActivateCaptcha","_error","input","meta","hasError","touched","formControl"],"mappings":"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","file":"static/js/main.74961aaf.chunk.js","sourcesContent":["import {UserAPI} from \"../../Api/Api\";\r\n\r\nconst FOLLOW_TOGGLE = 'FOLLOW_USER_TOGGLE'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_FETCHING = 'SET_USERS_FETCHING'\r\nconst TOGGLE_FOLLOW_PROGRESSING = 'USERS_TOGGLE_FOLLOW_PROGRESSING'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_CURRENT_FRIEND_PAGE = 'SET_CURRENT_FRIEND_PAGE'\r\nconst SET_CURRENT_SEARCH_TERM = 'SET_CURRENT_SEARCH_TERM'\r\n\r\n\r\n\r\nlet InitialState = {\r\n    users: [],\r\n    friends: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 19,\r\n    totalFriendsCount: 3,\r\n    isFetching: false,\r\n    followIsProgressing: [],\r\n    currentPage: 1,\r\n    currentFriendPage: 1,\r\n    currentSearchTerm: ''\r\n}\r\n\r\nconst UsersReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                currentSearchTerm: action.term\r\n            }\r\n        case SET_CURRENT_FRIEND_PAGE:\r\n            return {\r\n                ...state,\r\n                currentFriendPage: action.FriendsPage\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case FOLLOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            if (action.isFriendsArray){\r\n                return {\r\n                    ...state,\r\n                    friends: [...action.users]\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            if (action.isFriends){\r\n                return {\r\n                    ...state,\r\n                    totalFriendsCount: action.totalUsersCount\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOW_PROGRESSING:\r\n            return {\r\n                ...state,\r\n                followIsProgressing: action.isProgressing\r\n                    ? [...state.followIsProgressing, action.userId]\r\n                    : state.followIsProgressing.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFollowProgressing = (isProgressing, userId) => ({\r\n    type: TOGGLE_FOLLOW_PROGRESSING,\r\n    isProgressing,\r\n    userId\r\n})\r\nexport const setCurrentFriendPageAC = (FriendsPage) => ({type: SET_CURRENT_FRIEND_PAGE,FriendsPage})\r\nexport const setCurrentPageAC = (page) => ({type: SET_CURRENT_PAGE,page})\r\nexport const toggleFollow = (userId) => ({type: FOLLOW_TOGGLE, userId})\r\nexport const setUsers = (users,isFriendsArray) => ({type: SET_USERS, users,isFriendsArray})\r\nexport const setTotalUsersCount = (totalUsersCount, isFriends=false) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount,isFriends})\r\nexport const setFetching = (isFetching) => ({type: SET_FETCHING, isFetching})\r\nexport const setCurrentSearchTerm = (term) => ({type: SET_CURRENT_SEARCH_TERM,term})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize, friend=false,term='') => async (dispatch) => {\r\n    dispatch(setFetching(true))   //активируем крутилку\r\n    if (term) {\r\n        dispatch(setCurrentSearchTerm(term))\r\n    }\r\n    let response = await UserAPI.getUsers(currentPage, pageSize, friend,term)\r\n    dispatch(setFetching(false)) //снимаем крутилку\r\n    dispatch(setUsers(response.items,friend)) //сетаем юзеров с респонса\r\n    dispatch(setTotalUsersCount(response.totalCount,friend))//сетаем общее число юзеров\r\n\r\n}\r\nexport const FollowOrUnfollow = (userId,follow) => async (dispatch) => {\r\n    dispatch(toggleFollowProgressing(true, userId))\r\n    if (follow){\r\n        let response = await UserAPI.followUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId))\r\n        }}\r\n    else {let response = await UserAPI.unfollowUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId))\r\n        }}\r\n    dispatch(toggleFollowProgressing(false, userId))\r\n}\r\n\r\n\r\nexport default UsersReducer;","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img className={s.Preloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.71c1f798.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendBar\":\"FriendBar_FriendBar__E98Ls\",\"OnOf\":\"FriendBar_OnOf__3YZDD\",\"active\":\"FriendBar_active__apofq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__HfEV3\",\"PostDescription\":\"MyPosts_PostDescription__3rGc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2HAWx\",\"Hr\":\"Post_Hr__1lCMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LLWQ5\",\"login\":\"Header_login__2K_em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1qYDw\",\"item\":\"Navbar_item__3zJ7y\",\"settings\":\"Navbar_settings__1bVOI\",\"active\":\"Navbar_active__1FSHH\",\"friendsBar\":\"Navbar_friendsBar__DCjSi\"};","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.UsersPage.users\r\n}\r\nconst getActiveUser = (state) => {\r\n    return state.ProfilePage.ProfileInfo\r\n}\r\n\r\nexport const getFriends = (state) => {\r\n    return state.UsersPage.friends\r\n}\r\nexport const getUsersSuper = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\nexport const getActiveUserFollowed = createSelector(getUsers, getActiveUser, (users,profile) => {\r\n    if (!profile) {\r\n        return null\r\n    }\r\n    else {\r\n        return users.filter(u => u.id === profile.userId)\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPage.totalUsersCount\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching\r\n}\r\nexport const getFollowIsProgressing = (state) => {\r\n    return state.UsersPage.followIsProgressing\r\n}","const UPDATE_NEWS = 'UPDATE_NEWS'\r\nconst ADD_NEWS = 'ADD_NEWS'\r\n\r\n\r\nlet InitialState = {\r\n    NewsPost: [\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 1, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 2, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 3, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 4, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 5, Avtor: 'Vasya Totechkin', Img: ''}\r\n    ],\r\n    NewsNewsText : 'hey'\r\n}\r\n\r\n\r\nconst NewsReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEWS: {\r\n            let NewPost = {\r\n                Text: state.NewsNewsText,\r\n                Id: 5,\r\n                Img: '',\r\n                Avtor: 'Salam'\r\n            }\r\n            return {\r\n                ...state,\r\n                NewsNewsText: '',\r\n                NewsPost: [...state.NewsPost, NewPost]\r\n            }\r\n        }\r\n        case UPDATE_NEWS:\r\n            return {\r\n                ...state,\r\n                NewsNewsText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = () => ({type: ADD_NEWS})\r\nexport const addNewText = (text) => ({\r\n    type: UPDATE_NEWS,\r\n    newText: text\r\n})\r\n\r\nexport default NewsReducer","import * as axios from \"axios\";\r\n\r\nconst AxiosInstance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '0159681d-0f54-44dc-86a3-a6b4bf69358f'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0'\r\n})\r\n\r\nexport const DialogsApi = {\r\n    PutDialog(userId) {\r\n        return AxiosInstance.put(`dialogs/${userId}`)\r\n    },\r\n    GetDialogs() {\r\n        return AxiosInstance.get('dialogs')\r\n    },\r\n    GetUserDialog(userId) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.get(url)\r\n    },\r\n    PutMessage(userId, message) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.post(url,{body: message})\r\n    },\r\n    DeleteMessage (messageId) {\r\n        return AxiosInstance.delete(`dialogs/messages/${messageId}`)\r\n    }\r\n}\r\n\r\nexport const Captcha = () => {\r\n    return AxiosInstance.get('security/get-captcha-url')\r\n\r\n}\r\nexport const AuthApi = {\r\n    AuthUser() {\r\n        return AxiosInstance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    AuthLogin(email,password,rememberMe,captcha=null){\r\n        return AxiosInstance.post(`auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    AuthLogOut(){\r\n        return AxiosInstance.post(`auth/logout`)\r\n\r\n    }\r\n}\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10,friend = null,term='') {\r\n        return AxiosInstance.get(`users?page=${currentPage}&count=${pageSize}&friend=${friend}&term=${term}`)\r\n            .then(response => {\r\n                    return response.data\r\n                }\r\n            )\r\n    },\r\n    followUser(userId) {\r\n        return AxiosInstance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    unfollowUser(userId) {\r\n        return AxiosInstance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserProfile(userId) {\r\n        return AxiosInstance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    getProfileStatus(userId){\r\n        return AxiosInstance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus (status){\r\n        return AxiosInstance.put(`profile/status/`,{status: status})\r\n    },\r\n    changeProfile(userId, profile){\r\n        return AxiosInstance.put(`profile`,{userId, ...profile})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    changeMainPhoto(photo){\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return AxiosInstance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginProfileHeader\":\"HeaderProfile_LoginProfileHeader__2X-c6\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {DialogsApi} from \"../../Api/Api\";\r\n\r\nconst SET_DIALOGS = 'SET_DIALOGS'\r\nconst SET_MESSAGES = 'SET_MESSAGES'\r\nconst ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE'\r\n\r\n\r\nlet InitialState = {\r\n        DialogsData: null,\r\n        MessagesData: null\r\n}\r\n\r\nconst DialogReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, action.newMessage]\r\n            }\r\n        }\r\n        case SET_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                MessagesData: action.messagesData\r\n            }\r\n        }\r\n        case SET_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                DialogsData: action.dialogsData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ShowMessagesAC = (messagesData) => ({type: SET_MESSAGES, messagesData})\r\nconst SetDialogs = (dialogsData) => ({type: SET_DIALOGS, dialogsData})\r\nconst AddNewMessage = (newMessage) => ({type: ADD_NEW_MESSAGE, newMessage})\r\n\r\n\r\nexport const AddNewDialog = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.PutDialog(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ShowDialogs())\r\n    }\r\n}\r\nexport const ShowDialogs = () => async (dispatch) => {\r\n    let response = await DialogsApi.GetDialogs()\r\n    dispatch(SetDialogs(response.data))\r\n}\r\nexport const ShowMessages = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.GetUserDialog(id)\r\n    dispatch(ShowMessagesAC(response.data.items))\r\n}\r\nexport const SendMessage = (userid,message) => async (dispatch) => {\r\n    let response = await DialogsApi.PutMessage(userid, message)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(AddNewMessage(response.data.data.message))\r\n    }\r\n}\r\nexport const DeleteMessage = (messageId, userID) => async (dispatch) => {\r\n    let response = await DialogsApi.DeleteMessage(messageId)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(ShowMessages(userID))\r\n    }\r\n}\r\n\r\nexport default DialogReducer;","export const HelperStopSubmit = (errorMessages) => {\r\n    let ErrorsNames = errorMessages.map(error => {\r\n        let newElement = error.split('->')[1]\r\n        return newElement.substring(0, newElement.length - 1).toLowerCase()\r\n    })\r\n    let ErrorObject = {}\r\n    for (let i = 0; i < errorMessages.length; i ++){\r\n        ErrorObject[ErrorsNames[i]] = errorMessages[i]\r\n    }\r\n    return ErrorObject\r\n}","import {UserAPI} from \"../../Api/Api\";\r\nimport {SetCurrentUserProfile} from \"./AuthReducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {HelperStopSubmit} from \"../../Utils/HelperStopSubmit\";\r\n\r\n\r\nconst PROFILE_ADD_POST = 'PROFILE_ADD_POST'\r\nconst PROFILE_SET_PROFILE = 'PROFILE_SET_PROFILE'\r\nconst PROFILE_SET_PROFILE_STATUS = 'PROFILE_SET_PROFILE_STATUS'\r\nconst PROFILE_DELETE_POST = 'PROFILE_DELETE_POST'\r\nconst PROFILE_UPDATE_PHOTO = 'PROFILE_UPDATE_PHOTO'\r\nconst PROFILE_IS_FETCHING_PHOTO_TOGGLE = 'PROFILE_IS_FETCHING_PHOTO_TOGGLE'\r\nconst SUBMIT_WAS_SUCCESS = 'SUBMIT_WAS_SUCCESS'\r\n\r\n\r\nlet InitialState = {\r\n    PostsData: [\r\n        {message: 'Heil Hitler', id: 1, likecount: 1488},\r\n        {message: 'salam', id: 2, likecount: 228},\r\n    ],\r\n    ProfileInfo: null,\r\n    ProfileStatus: '',\r\n    isFetching: false,\r\n    submitWasSuccess: false\r\n}\r\n\r\n\r\nconst ProfileReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SUBMIT_WAS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                submitWasSuccess: action.success\r\n            }\r\n        }\r\n        case PROFILE_DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                PostsData: state.PostsData.filter(u => u.id !== action.postId)\r\n            }\r\n        }\r\n\r\n        case PROFILE_ADD_POST: {\r\n            let NewPost = {\r\n                message: action.post,\r\n                id: 5,\r\n                likecount: 148,\r\n            }\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, NewPost]\r\n            }\r\n        }\r\n        case PROFILE_SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: action.ProfileInfo\r\n            }\r\n        case PROFILE_SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                ProfileStatus: action.status\r\n            }\r\n        case PROFILE_UPDATE_PHOTO:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: {...state.ProfileInfo,photos: {...action.photo}},\r\n            }\r\n        case PROFILE_IS_FETCHING_PHOTO_TOGGLE:{\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deleteProfilePost = (postId) => ({type: PROFILE_DELETE_POST, postId})\r\nexport const submitWasSuccess = (success) => ({type: SUBMIT_WAS_SUCCESS, success})\r\nexport const addNewPost = (post) => ({type: PROFILE_ADD_POST, post})\r\nexport const setProfile = (ProfileInfo) => ({type: PROFILE_SET_PROFILE, ProfileInfo})\r\nexport const setProfileStatus = (status) => ({type: PROFILE_SET_PROFILE_STATUS, status})\r\nconst updateProfilePhoto = (photo) => ({type: PROFILE_UPDATE_PHOTO, photo})\r\nconst isFetchingPhotoToggle = () => ({type: PROFILE_IS_FETCHING_PHOTO_TOGGLE})\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getProfileStatus(userId)\r\n    dispatch(setProfileStatus(response))\r\n\r\n}\r\nexport const UpdateProfileStatus = (status) => async (dispatch) => {\r\n    // try {\r\n        let response = await UserAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setProfileStatus(status))\r\n        }\r\n    // } catch (error){\r\n    //     console.log(error)\r\n    // }\r\n\r\n}\r\nexport  const UpdateProfileInfo = (id, profile) => async (dispatch) => {\r\n    let response = await UserAPI.changeProfile(id, {...profile})\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfile(id))\r\n        dispatch(submitWasSuccess(true))\r\n    }\r\n    else {\r\n        let errorMessages = response.messages.length > 0 ? response.messages : 'Some error'\r\n        dispatch(stopSubmit('ProfileInfoInput', {'contacts' : {...HelperStopSubmit(errorMessages)}}))\r\n    }\r\n\r\n}\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getUserProfile(userId)\r\n    dispatch(setProfile(response))\r\n\r\n}\r\nexport const saveMainPhoto = (photo) => async (dispatch) => {\r\n    dispatch(isFetchingPhotoToggle())\r\n    let response = await UserAPI.changeMainPhoto(photo)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(isFetchingPhotoToggle())\r\n        dispatch(updateProfilePhoto(response.data.data.photos))\r\n        dispatch(SetCurrentUserProfile(response.data.data.photos.large))\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;","let InitialState = {\r\n    FriendsBarData: [\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/7e/ee/0a/7eee0a15c3bb16b777c64116e8cfaafe.jpg',\r\n            Name: 'Danil',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 45\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/89/57/16/8957167672cdfdb7fba47ef531f7a3eb.jpg',\r\n            Name: 'Sveta',\r\n            OnOf: 'of',\r\n            id: 13\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/originals/6c/b6/4c/6cb64c7f040e63059639a6df25969588.jpg',\r\n            Name: 'Kalim',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 12\r\n        }\r\n    ]\r\n}\r\n\r\nconst NavbarReducer = (state = InitialState,acton) => {\r\n    return state\r\n}\r\n\r\nexport default NavbarReducer","import {authUser} from \"./AuthReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'APP_INITIALIZED_SUCCESS'\r\nconst SOME_GLOBAL_ERROR = 'SOME_GLOBAL_ERROR'\r\n\r\nlet InitialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nlet AppReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SOME_GLOBAL_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            }\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nconst showGlobalError = (error) => ({type: SOME_GLOBAL_ERROR, error})\r\n\r\nexport const initializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\nexport const setGlobalError = (error) => async (dispatch) => {\r\n    dispatch(showGlobalError(error))\r\n    setTimeout(() => {dispatch(showGlobalError(null))},5000)\r\n}\r\n\r\n\r\nexport default AppReducer","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport DialogReducer from \"./Reducers/DialogsReducer\";\r\nimport ProfileReducer from \"./Reducers/ProfileReducer\";\r\nimport NewsReducer from \"./Reducers/NewsReducer\";\r\nimport NavbarReducer from \"./Reducers/NavbarReducer\";\r\nimport UsersReducer from \"./Reducers/UsersReducer\";\r\nimport AuthReducer from \"./Reducers/AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\n\r\nlet Reducers = combineReducers({\r\n    DialogsPage : DialogReducer,\r\n    ProfilePage: ProfileReducer,\r\n    NewsPage: NewsReducer,\r\n    NavbarPage: NavbarReducer,\r\n    UsersPage: UsersReducer,\r\n    Auth: AuthReducer,\r\n    form: formReducer,\r\n    App: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(Reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store\r\n\r\nwindow.__store__ = store","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    let ComponentWithSuspense = (props) => {\r\n        return <Suspense fallback={<div>Минуточку...</div>}><Component {...props}/></Suspense>\r\n    }\r\n    return ComponentWithSuspense\r\n}","import React from \"react\";\r\nimport s from './FriendBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FriendBar = (props) => {\r\n    let id = '/friends/' + props.id;\r\n    let Online = (props.OnOf == 'of') ? '': <img className={s.OnOf} src= {props.OnOf}/>\r\n    return (\r\n        <div className={s.FriendBar}>\r\n            <img src= {props.Img}/>\r\n            <NavLink activeClassName={s.active} to={id}> {props.Name} {Online} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendBar","import React from \"react\";\r\nimport FriendBar from \"./FrindBar/FriendBar\";\r\n\r\nconst FriendsBar = (props) => {\r\n    let FrindElements = props.FriendsBarState.map(f => <FriendBar key = {f.id} Img = {f.Img} Name= {f.Name} OnOf = {f.OnOf} id = {f.id}/>)\r\n    return (\r\n        <div> {FrindElements} </div>\r\n    )\r\n}\r\n\r\nexport default FriendsBar","import FriendsBar from './FriendsBar'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        FriendsBarState: state.NavbarPage.FriendsBarData\r\n    }\r\n}\r\n\r\nconst FriendsBarContainer = connect(mapStateToProps, null)(FriendsBar)\r\n\r\nexport default FriendsBarContainer","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto\r\n    from '../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg'\r\n\r\nconst DialogItem = React.memo(props => {\r\n    let UserDialogUrl = '/dialogs/' + props.id\r\n    let UserProfileUrl = '/profile/' + props.id\r\n    return (\r\n        <div>\r\n            <div className={props.id == props.UserId? s.DialogActive:s.Dialog}>\r\n                <NavLink to={UserProfileUrl}>\r\n                <img className={s.DialogImg} src={props.photo === null ? userPhoto : props.photo}/>\r\n            </NavLink>\r\n                <NavLink to={UserDialogUrl}>\r\n                    <span >{props.name}</span>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default DialogItem","import {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../Common/FormsControls/FormControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {FieldCreator} from \"../Common/FormsControls/FieldCreator\";\r\n\r\nlet maxLength200 = maxLengthCreator(200)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst MessageInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('messageInput', [required,maxLength200], SpecialTextArea, 'Write message', null)}\r\n        <button>add</button>\r\n    </form>\r\n}\r\n\r\nconst MessageInputReduxForm = reduxForm({form: 'messageInputer'})(MessageInputForm)\r\n\r\nexport default MessageInputReduxForm","import s from \"../Message/Message.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {DeleteMessage} from \"../../../Redux/Reducers/DialogsReducer\";\r\n\r\nconst Message = React.memo(props => {\r\n    let [DeliteMode, setDeliteMode] = useState(false)\r\n    let activateDeliteModeToggle = () => {\r\n        setDeliteMode(!DeliteMode)\r\n    }\r\n    const onDeleteMessage = () => {\r\n        props.DeleteMessage(props.id, props.userId)\r\n    }\r\n    return <div className={props.isImSender ? s.MessageIm : s.MessageFriend}>\r\n             <div className={props.viewed?s.MessageText:s.MessageTextNotViewed}>\r\n                 <img src={!props.isImSender && props.photo && props.photo}/>\r\n                 <span>{props.body} <button onClick={activateDeliteModeToggle}>...</button></span>\r\n                 <button onClick={onDeleteMessage} className={DeliteMode?s.Button:s.HiddenButton}>Delete</button>\r\n        </div>\r\n        <hr className={s.line}/>\r\n    </div>\r\n})\r\n\r\nexport default Message","import React from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst UserDialog = (props) => {\r\n    let MessagesElements = null\r\n    if (props.MessagesData){\r\n        MessagesElements = props.MessagesData.map(message => <Message DeleteMessage = {props.DeleteMessage}\r\n                                                                      userId = {props.UserId}\r\n                                                                      isImSender = {props.CurrentUserId === message.senderId}\r\n                                                                      body = {message.body}\r\n                                                                      key={message.id} v\r\n                                                                      viewed = {message.viewed}\r\n                                                                      id = {message.id}\r\n                                                                      addedAt = {message.addedAt}\r\n                                                                      photo = {props.UserInfo && props.UserInfo.photos.large}\r\n\r\n        />)\r\n    }\r\n    return <div>\r\n        {MessagesElements}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default UserDialog","import React, {useState} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageInputReduxForm from \"./DialogsForm\";\r\nimport UserDialog from \"./UserDialog\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let [isShowDialogsMenu, setIsShowDialogsMenu] = useState(true)\r\n    let DialogsElements = null\r\n    let UserInfo = null\r\n    if (props.DialogsData) {\r\n        if (props.UserId) {\r\n            UserInfo = props.DialogsData.filter(d => d.id == props.UserId)\r\n        }\r\n        DialogsElements = props.DialogsData.map(dialog => <DialogItem\r\n            UserId={props.UserId} key={dialog.id}\r\n            photo={dialog.photos.large} name={dialog.userName}\r\n            id={dialog.id}/>);\r\n    }\r\n    const addMessage = (dataForm) => {\r\n        props.SendMessage(props.UserId, dataForm.messageInput)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={isShowDialogsMenu? s.Dialogs: s.HiddenDialogs}>\r\n            {isShowDialogsMenu? <div className={s.DialogsItem}>\r\n                <button onClick={() => {setIsShowDialogsMenu(false)}}> Hide Dialogs</button>\r\n                {DialogsElements}\r\n            </div>: <button className={s.HideButton} onClick={() => {setIsShowDialogsMenu(true)}}> Show Dialogs </button>}\r\n\r\n            <div className={s.Messages}>\r\n                <div><UserDialog UserInfo={UserInfo && UserInfo[0]} DeleteMessage={props.DeleteMessage}\r\n                                 UserId={props.UserId}\r\n                                 CurrentUserId={props.CurrentUserId} MessagesData={props.MessagesData}/></div>\r\n            </div>\r\n            <div className={s.NewMessage}>\r\n                <MessageInputReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {AddNewDialog, DeleteMessage, SendMessage, ShowDialogs, ShowMessages} from \"../../Redux/Reducers/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nclass DialogContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (userId){\r\n            this.props.ShowMessages(userId)\r\n        }\r\n        this.props.ShowDialogs()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n            let userId = this.props.match.params.userId\r\n            if (userId){\r\n                this.props.ShowMessages(userId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs {...this.props} DialogsData = {this.props.DialogsData}\r\n                        MessagesData = {this.props.MessagesData}\r\n                        UserId = {this.props.match.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.DialogsPage.DialogsData,\r\n        MessagesData: state.DialogsPage.MessagesData,\r\n        CurrentUserId: state.Auth.CurrentUserId,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {AddNewDialog,ShowDialogs,ShowMessages,SendMessage,DeleteMessage}),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(DialogContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n    let [editMode, setEditeMode] = useState(false)\r\n    let [status, setStatus] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.ProfileStatus)\r\n    },[props.ProfileStatus])\r\n\r\n    const  activeEditMode = () => {\r\n            setEditeMode(true)\r\n    }\r\n    const deactiveEditMode = () => {\r\n        setEditeMode(false)\r\n        props.UpdateProfileStatus(status)\r\n    }\r\n    const changeInputStatus = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    if (props.IDisCurrent){\r\n\r\n    return <>\r\n        {!editMode &&\r\n        <div><span onDoubleClick={activeEditMode}>Status: <span>{props.ProfileStatus}</span></span></div>}\r\n        {editMode &&\r\n        <div><input onChange={changeInputStatus} autoFocus={true} onBlur={deactiveEditMode}\r\n                    value={status}/></div>}\r\n    </>}\r\n    else {\r\n        return <>\r\n            <div><span>Status: <span>{props.ProfileStatus}</span></span></div>\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nexport default StatusWithHooks","import {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport s from \"../../Common/FormsControls/FormControl.module.css\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\nconst SpecialInput = SpecialFormCreator('input')\r\n\r\nconst ProfileInfoInputForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('fullName', [required,maxLength100], SpecialInput, 'Write your name', {})}\r\n        {FieldCreator('aboutMe', [required], SpecialTextArea, 'About you', null)}\r\n        {FieldCreator('lookingForAJob',null, SpecialInput,null,{type: 'checkbox'},'Looking for a job:')}\r\n        {FieldCreator('lookingForAJobDescription', [required], SpecialTextArea, 'Descriptions for looking', null)}\r\n        Your contacts:\r\n        <hr></hr>\r\n        {Object.keys(props.initialValues.contacts).map(key => <ContactsProfileField key = {key} name= {key}/>)}\r\n        <button>add</button>\r\n        <button type={'button'} onClick={props.deactivateMode}>escape</button>\r\n        {props.error && <div className={s.someoneError}>\r\n            <span>{props.error}</span>\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst ContactsProfileField = ({name}) => {\r\n    return <div>\r\n        {FieldCreator('contacts.' + name, [maxLength100],SpecialInput,name, null)}\r\n    </div>\r\n}\r\n\r\n\r\nconst ProfileInfoInputReduxForm = reduxForm({form: 'ProfileInfoInput'})(ProfileInfoInputForm)\r\n\r\nexport default ProfileInfoInputReduxForm","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileDescriptionBlock = (props) => {\r\n    return  <div className={s.DescriptionBlock}>\r\n        {props.IDisCurrent && <button onClick={props.activateMode}>change profile</button>}\r\n        <div>About me: {props.ProfileInfo.aboutMe}</div>\r\n        <div>Full Name: {props.ProfileInfo.fullName}</div>\r\n        <div>Looking For A Job: {props.ProfileInfo.lookingForAJob\r\n            ? <span>Yes\r\n                <div>LookingForAJob Description: {props.ProfileInfo.lookingForAJobDescription}</div></span>\r\n            : <span>No</span>\r\n        }</div>\r\n        <div className={s.contacts}>\r\n            {Object.keys(props.ProfileInfo.contacts).map(key => <ContactsProfile key = {key} ContactTitle={key} ContactValue={props.ProfileInfo.contacts[key]}/>\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ContactsProfile = ({ContactTitle, ContactValue}) => {\r\n    return <div>\r\n        {ContactValue && <>{ContactTitle}: <a href={ContactValue}> {ContactValue}</a></>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileDescriptionBlock","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfilePhotoInputFile = (props) => {\r\n    return <div className={s.input__wrapper}>\r\n        <input onChange={props.onMainPhotoSelected} type={\"file\"} name=\"file\" id=\"input__file\" className={s.input__file} multiple/>\r\n        <label htmlFor=\"input__file\" className={s.input__file_button}>\r\n                <span className={s.input__file_icon_wrapper}><img src=\"https://i.pinimg.com/736x/55/3f/21/553f212f6a5588d90134c3f29086f2e7.jpg\"\r\n                                                                  alt=\"Сменить фото\" width=\"25\"/>\r\n                </span>\r\n            <span className={s.input__file_button_text}>Сменить фото</span>\r\n        </label>\r\n    </div>\r\n}\r\n\r\nexport default ProfilePhotoInputFile","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport UserPhoto\r\n    from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm\";\r\nimport ProfileDescriptionBlock from \"./ProfileDescriptionBlock\";\r\nimport ProfilePhotoInputFile from \"./ProfilePhotoInputFile\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {submitWasSuccess} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let DialogUrl =  props.ProfileInfo && '/dialogs/' + props.ProfileInfo.userId\r\n    let dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (props.submitWasSuccess){\r\n            deactivateMode()\r\n            dispatch(submitWasSuccess(false))\r\n        }\r\n    }, [props.submitWasSuccess,dispatch])\r\n    let [ProfileEditMode, setProfileEditeMode] = useState(false)\r\n    let activateMode = () => {\r\n        setProfileEditeMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setProfileEditeMode(false)\r\n    }\r\n    let changeProfile = (data) => {\r\n        props.UpdateProfileInfo(props.CurrentUserId, data)\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveMainPhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const startDialog = () => {\r\n        props.AddNewDialog(props.ProfileInfo.userId)\r\n    }\r\n    if (!props.ProfileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    const IDisCurrent = props.ProfileInfo.userId === props.CurrentUserId\r\n    return (\r\n        <div>\r\n            {props.isFetching ? <Preloader/> :\r\n                <div><img className={s.img1}\r\n                          src={props.ProfileInfo.photos.large ? props.ProfileInfo.photos.large : UserPhoto}/>\r\n                </div>}\r\n            {IDisCurrent &&\r\n            <div className={s.inputButton}>\r\n                <ProfilePhotoInputFile onMainPhotoSelected={onMainPhotoSelected}/>\r\n            </div>\r\n            }\r\n            <div>\r\n                <StatusWithHooks UpdateProfileStatus={props.UpdateProfileStatus} ProfileStatus={props.ProfileStatus} IDisCurrent={IDisCurrent}/>\r\n            </div>\r\n            <NavLink to = {DialogUrl}>\r\n                {!IDisCurrent && <button onClick={startDialog}>Start dialog</button>}</NavLink>\r\n            {ProfileEditMode\r\n                ? <ProfileInfoForm initialValues={props.ProfileInfo} deactivateMode={deactivateMode} onSubmit={changeProfile}/>\r\n                : <ProfileDescriptionBlock IDisCurrent = {IDisCurrent} activateMode ={activateMode} ProfileInfo={props.ProfileInfo}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    const id = props.id\n    const deleteProfilePost = () => {\n        props.deleteProfilePost(id)\n    }\n    return(<div className={s.item}>\n            <img src = 'https://avatars.mds.yandex.net/get-zen_doc/171120/pub_5b44a8cd3e56d900a85b258e_5b44aa46a2e4e400a92221a3/scale_1200'/>\n            {props.message}\n            <div><span>\n                Like {' '}\n                {props.likecount}\n            </span></div>\n            <button onClick={deleteProfilePost}>Delete</button>\n            <hr className={s.Hr}/>\n        </div>\n    );\n}\nexport default Post;","\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\n\r\nconst maxLength30 =  maxLengthCreator(20)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst PostInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('postInput', [required,maxLength30], SpecialTextArea, 'Write new post', null)}\r\n        <button>add</button>\r\n    </form>\r\n\r\n}\r\nconst PostInputReduxForm = reduxForm({form: 'postInput'})(PostInputForm)\r\nexport default PostInputReduxForm","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport PostInputReduxForm from \"./MyPostsForm\";\n\n\nconst MyPosts = React.memo(props => {\n    console.log(props)\n    let PostsElements = [...props.PostsState].map(p => <Post deleteProfilePost = {props.deleteProfilePost} key={p.id} message={p.message} likecount={p.likecount}\n                                                        id={p.id}/>);\n    let addPost = (dataForm) => {\n        props.addNewPost(dataForm.postInput)\n    }\n    return (<div className={s.PostDescription}>\n            <h3> My posts</h3>\n            <div>\n                <PostInputReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElements}\n            </div>\n        </div>\n    );\n})\n\nexport default MyPosts;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\nimport {addNewPost, deleteProfilePost} from \"../../../Redux/Reducers/ProfileReducer\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        PostsState: state.ProfilePage.PostsData\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps,\n    {addNewPost, deleteProfilePost})(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n    let Followed = null\n    if (props.activeUser) {\n        if (props.activeUser[0]){\n            Followed = props.activeUser[0].followed\n        }\n    }\n\n    return (<div className={s.Profile}>\n            <ProfileInfo CurrentUserId = {props.CurrentUserId}\n                UpdateProfileStatus = {props.UpdateProfileStatus}\n                         ProfileStatus = {props.ProfileStatus}\n                         ProfileInfo={props.ProfileInfo}\n                         UpdateProfileInfo = {props.UpdateProfileInfo}\n                         saveMainPhoto = {props.saveMainPhoto}\n                         isFetching = {props.isFetching}\n                         submitWasSuccess = {props.submitWasSuccess}\n                         FollowOrUnfollow ={props.FollowOrUnfollow}\n                         Followed = {Followed}\n                         AddNewDialog = {props.AddNewDialog}\n            />\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\n\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getProfileStatus, saveMainPhoto, UpdateProfileInfo,\r\n    UpdateProfileStatus\r\n} from \"../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {FollowOrUnfollow} from \"../../Redux/Reducers/UsersReducer\";\r\nimport {getActiveUserFollowed, getUsersSuper} from \"../../Redux/Selectors/UsersSelector\";\r\nimport {AddNewDialog} from \"../../Redux/Reducers/DialogsReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.CurrentUserId\r\n            this.props.getProfile(userId)\r\n            this.props.getProfileStatus(userId)\r\n\r\n        } else {\r\n            this.props.getProfileStatus(userId)\r\n            this.props.getProfile(userId)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.props.match.params.userId && prevProps.match.params.userId) {\r\n            this.props.getProfile(this.props.CurrentUserId)\r\n            this.props.getProfileStatus(this.props.CurrentUserId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} ProfileInfo={this.props.ProfileInfo}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfileInfo: state.ProfilePage.ProfileInfo,\r\n        CurrentUserId: state.Auth.CurrentUserId,\r\n        ProfileStatus: state.ProfilePage.ProfileStatus,\r\n        isFetching: state.ProfilePage.isFetching,\r\n        submitWasSuccess: state.ProfilePage.submitWasSuccess,\r\n        activeUser: getActiveUserFollowed(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getProfileStatus, UpdateProfileStatus, UpdateProfileInfo, saveMainPhoto,FollowOrUnfollow, AddNewDialog\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport UserPhoto from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\nimport styles from './HeaderProfile.module.css'\r\n\r\nconst HeaderProfile = (props) => {\r\n    const onLogOut = () => {\r\n        props.authLogOut()\r\n    }\r\n    return <div>\r\n        <button onClick={onLogOut}>Log Out</button>\r\n        <span className={styles.LoginProfileHeader}>{props.login}</span>\r\n\r\n        {props.CurrentUserPhoto? <img src = {props.CurrentUserPhoto}/>: <img src = {UserPhoto}/> }\r\n    </div>\r\n}\r\n\r\nexport default HeaderProfile;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderProfile from \"./HeaderProfile/HeaderProfile\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}><NavLink to={`/profile/${props.userId}`}>\r\n            <img src='https://bumper-stickers.ru/69359-thickbox_default/logotip-atlanta-thrashers-atlanta-tresherz.jpg'/>\r\n        </NavLink>\r\n            <div className={s.login}>\r\n                {props.isAuth ?\r\n                    <HeaderProfile login={props.login}\r\n                                   CurrentUserPhoto={props.CurrentUserPhoto}\r\n                                   authLogOut = {props.authLogOut}\r\n                    />\r\n\r\n                    : <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogOut} from \"../../Redux/Reducers/AuthReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        login: state.Auth.login,\r\n        userId: state.Auth.CurrentUserId,\r\n        isAuth: state.Auth.isAuth,\r\n        CurrentUserPhoto: state.Auth.CurrentUserPhoto\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {authLogOut})(HeaderContainer)","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst AppPreloader = () => {\r\n    return <div className={s.AppLoadingBlock}>\r\n        <img className={s.AppPreloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default AppPreloader","import 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport './TestLay.css'\r\n\r\nimport React from \"react\";\r\nimport './App.css';\r\nimport store from \"./Redux/ReduxStore\";\r\nimport {BrowserRouter, HashRouter, Route, withRouter, Switch, Redirect, NavLink} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializedApp, setGlobalError} from \"./Redux/Reducers/AppReducer\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport AppPreloader from \"./Components/Common/Preloader/AppPreloader\";\r\nimport {withSuspense} from \"./HOC/withSuspense\";\r\nimport s from \"./Components/Navbar/Navbar.module.css\";\r\n\r\nconst Music = React.lazy(() => import(\"./Components/Music/Music\"));\r\nconst UsersContainer = React.lazy(() => import(\"./Components/Users/UsersContainer\"));\r\nconst Login = React.lazy(() => import(\"./Components/Login/Login\"));\r\nconst Friends = React.lazy(() => import(\"./Components/Friends/FriendsContainer\"));\r\nconst Settings = React.lazy(() => import(\"./Components/Settings/Settings\"));\r\nconst NewsContainer = React.lazy(() => import(\"./Components/News/NewsContainer\"));\r\nconst UserExit = React.lazy(() => import(\"./Components/Common/Exit\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    catchAllErrors = (data) => {\r\n        if (data.reason.response) {\r\n            let httpCode = data.reason.response.status\r\n            let errorMessage = data.reason.response.data.message ? data.reason.response.data.message : ''\r\n            this.props.setGlobalError('Error: ' + httpCode + ' ' + errorMessage)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <AppPreloader/>\r\n        }\r\n        return (<div>\r\n            <LayOut globalError={this.props.globalError} isAuth = {this.props.isAuth}/>\r\n            {/*<div className='app-wrapper'>*/}\r\n            {/*    /!*<HeaderContainer/>*!/*/}\r\n            {/*    /!*<Navbar/>*!/*/}\r\n            {/*    /!*<SuspenseMainContent globalError={this.props.globalError}/>*!/*/}\r\n            {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\nconst LayOut = (props) => {\r\n    return <Layout>\r\n        <Header className=\"header\">\r\n            <HeaderContainer/>\r\n        </Header>\r\n        <Layout>\r\n            <Sider width={200} className=\"site-layout-background\">\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Profile\">\r\n                        <Menu.Item key=\"1\"><NavLink activeClassName={s.active} exact to ='/profile'>Profile</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"2\"><NavLink activeClassName={s.active} to= '/friends'>Friends</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"3\"><NavLink activeClassName={s.active} to='/music'>Music</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"4\"><NavLink activeClassName={s.active} to ='/dialogs'>Messages</NavLink></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Social\">\r\n                        <Menu.Item key=\"5\"><NavLink activeClassName={s.active}to= '/users'>Find Users</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"6\"><NavLink activeClassName={s.active} to = '/news'>News</NavLink></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"Other\">\r\n                        <Menu.Item key=\"9\"><NavLink activeClassName={s.active} to= '/settings'> Settings</NavLink></Menu.Item>\r\n                        {props.isAuth && <Menu.Item key=\"10\"><NavLink activeClassName={s.active} to= '/exit'> Exit</NavLink></Menu.Item>}\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <SuspenseMainContent globalError={props.globalError}/>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    </Layout>\r\n}\r\n\r\nconst MainContent = (props) => {\r\n    return <div className='app-wrapper-content'>\r\n        {props.globalError && <div className='globalError'>{props.globalError}</div>}\r\n        <Switch>\r\n            <Route path='/dialogs/:userId?' render={() => <DialogsContainer/>}/>\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n            <Route path='/exit' render={() => <UserExit/>}/>\r\n            <Route path='/users' render={() => <UsersContainer/>}/>\r\n            <Route path='/news' render={() => <NewsContainer/>}/>\r\n            <Route path='/settings' render={() => <Settings/>}/>\r\n            <Route path='/music' render={() => <Music/>}/>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n            <Route path='/friends' render={() => <Friends/>}/>\r\n            <Redirect exact from=\"/\" to=\"/profile\"/>\r\n            <Route path='/*' render={() => <div>404 NOT FOUND</div>}/>\r\n        </Switch>\r\n    </div>\r\n}\r\nconst SuspenseMainContent = withSuspense(MainContent)\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.App.initialized,\r\n    globalError: state.App.globalError,\r\n    isAuth: state.Auth.isAuth,\r\n})\r\nconst AppContainer = compose(\r\n    connect(mapStateToProps, {initializedApp, setGlobalError}),\r\n    withRouter,\r\n)(App)\r\n\r\nconst FirstReactApp = () => {\r\n    return <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default FirstReactApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport FirstReactApp from \"./App\";\n\n\nReactDOM.render(\n        <FirstReactApp/>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__3Vj5B\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__C-bRr\",\"contacts\":\"ProfileInfo_contacts__3PUYi\",\"inputButton\":\"ProfileInfo_inputButton__tOQHY\",\"input__wrapper\":\"ProfileInfo_input__wrapper__2h0NE\",\"input__file\":\"ProfileInfo_input__file__1C0bl\",\"input__file_icon_wrapper\":\"ProfileInfo_input__file_icon_wrapper__3LDHf\",\"input__file_button_text\":\"ProfileInfo_input__file_button_text__2X1rf\",\"input__file_button\":\"ProfileInfo_input__file_button__2WuXX\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value='')  => {\r\n    if (!value) {\r\n        return undefined\r\n    }\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__299da\",\"HiddenDialogs\":\"Dialogs_HiddenDialogs__3Sfui\",\"HideButton\":\"Dialogs_HideButton__1O5n3\",\"DialogsItem\":\"Dialogs_DialogsItem__2LzZ5\",\"Dialog\":\"Dialogs_Dialog__3bHRR\",\"DialogActive\":\"Dialogs_DialogActive__3giip\",\"DialogImg\":\"Dialogs_DialogImg__1DrZT\",\"Messages\":\"Dialogs_Messages__336IC\",\"active\":\"Dialogs_active__2OoQ0\",\"NewMessage\":\"Dialogs_NewMessage__1dPWM\",\"EnterMessage\":\"Dialogs_EnterMessage__TvDS4\"};","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FieldCreator = (name, validate, component, placeholder, props, text = '') => {\r\n    return <div>\r\n        {text}\r\n        <Field name={name} validate={validate} component={component} placeholder={placeholder} {...props}/>\r\n    </div>\r\n}\r\n","import {AuthApi, Captcha, UserAPI} from \"../../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_CURRENT_USER_PROFILE = 'SET_CURRENT_USER_PROFILE'\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_CAPTCHA_IMG = 'SET_CAPTCHA_IMG'\r\n\r\nlet InitialState = {\r\n    CurrentUserId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    CurrentUserPhoto: null,\r\n    CaptchaImg: ''\r\n}\r\n\r\nlet AuthReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case SET_CURRENT_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                CurrentUserPhoto: action.CurrentUserPhoto\r\n            }\r\n        case SET_CAPTCHA_IMG:\r\n            return {\r\n                ...state,\r\n                CaptchaImg: action.CaptchaImg\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst SetAuthUserData = (CurrentUserId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {CurrentUserId, email, login, isAuth}\r\n})\r\nexport const SetCurrentUserProfile = (CurrentUserPhoto) => ({type: SET_CURRENT_USER_PROFILE, CurrentUserPhoto})\r\nconst SetCaptchaImg = (CaptchaImg) => ({type: SET_CAPTCHA_IMG, CaptchaImg})\r\n\r\n\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthUser()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data\r\n        dispatch(SetAuthUserData(id, email, login, true))\r\n        let ProfileResponse = await UserAPI.getUserProfile(response.data.id)\r\n        dispatch(SetCurrentUserProfile(ProfileResponse.photos.large))\r\n    }\r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogin(email, password, rememberMe,captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUser())\r\n        dispatch(SetCaptchaImg(''))\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        if (errorMessage === 'Incorrect anti-bot symbols'){\r\n            dispatch(ActivateCaptcha())\r\n        }\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n}\r\n\r\nexport const authLogOut = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(SetAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const ActivateCaptcha = () => async (dispatch) => {\r\n    let response = await Captcha()\r\n    dispatch(SetCaptchaImg(response.data.url))\r\n}\r\n\r\n\r\nexport default AuthReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageIm\":\"Message_MessageIm__3nX-9\",\"MessageFriend\":\"Message_MessageFriend__3QzP8\",\"line\":\"Message_line__cs9eu\",\"MessageText\":\"Message_MessageText__1xUqN\",\"MessageTextNotViewed\":\"Message_MessageTextNotViewed__2rFRp\",\"HiddenButton\":\"Message_HiddenButton__3Etuu\",\"Button\":\"Message_Button__2PNq6\"};","import React from \"react\";\r\nimport styles from './FormControl.module.css'\r\n\r\n\r\nexport const SpecialFormCreator = (Component) =>  ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return <div className={styles.formControl + ' ' + (hasError?styles.error:'')}>\r\n        <div>\r\n            <Component {...input} {...props}/>\r\n        </div>\r\n        { hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.79eb8ca5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__12Q8B\",\"error\":\"FormControl_error__PW_OO\",\"someoneError\":\"FormControl_someoneError__2EXic\",\"CaptchaControl\":\"FormControl_CaptchaControl__35rhJ\",\"CaptchaImg\":\"FormControl_CaptchaImg__2NoGp\",\"CaptchaInput\":\"FormControl_CaptchaInput__84QcL\",\"CaptchaSpan\":\"FormControl_CaptchaSpan__12nV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__3T8h8\",\"AppPreloader\":\"Preloader_AppPreloader__1lSdQ\",\"AppLoadingBlock\":\"Preloader_AppLoadingBlock__MF2lR\"};"],"sourceRoot":""}