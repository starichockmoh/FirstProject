{"version":3,"sources":["Components/Common/FormsControls/FormControl.module.css","Components/Common/Preloader/Preloader.module.css","HOC/withAuthRedirect.js","accepts/images/Bean Eater-1s-200px.svg","Components/Navbar/FrindsBar/FrindBar/FriendBar.module.css","Components/Dialogs/FriendBarForDialogs/FriendBarForDialog.module.css","Components/Common/Preloader/Preloader.jsx","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Redux/Selectors/UsersSelector.js","Redux/Reducers/NewsReducer.js","Components/Navbar/Navbar.module.css","Components/Header/HeaderProfile/HeaderProfile.module.css","Api/Api.js","serviceWorker.js","Redux/Reducers/DialogsReducer.js","Utils/HelperStopSubmit.js","Redux/Reducers/ProfileReducer.js","Redux/Reducers/NavbarReducer.js","Redux/Reducers/AppReducer.js","Redux/ReduxStore.js","HOC/withSuspense.js","Components/Navbar/FrindsBar/FrindBar/FriendBar.jsx","Components/Navbar/FrindsBar/FriendsBar.jsx","Components/Navbar/FrindsBar/FriendsBarContainer.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/DialogsForm.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/UserDialog.jsx","Components/Dialogs/FriendBarForDialogs/FriendElementBar.jsx","Components/Dialogs/FriendBarForDialogs/TestFriendBar.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/Profile/ProfileInfo/Status/StatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfoForm.jsx","Components/Profile/ProfileInfo/ProfileDescriptionBlock.jsx","Components/Profile/ProfileInfo/FileInputs/ProfilePhotoInputFile.jsx","Components/Profile/ProfileInfo/FileInputs/AvatarInput.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/HeaderProfile/HeaderProfile.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Common/Preloader/AppPreloader.js","App.js","index.js","Components/Dialogs/Dialogs.module.css","Utils/Validators/validators.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg","Components/Common/FormsControls/FieldCreator.jsx","Redux/Reducers/AuthReducer.js","Components/Common/FormsControls/FormControl.js","Components/Dialogs/Message/Message.module.css","Redux/Reducers/UsersReducer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","Auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Preloader","className","s","src","PreloaderLogo","getUsers","UsersPage","users","getUsersSuper","createSelector","filter","u","getActiveUserFollowed","ProfilePage","ProfileInfo","profile","id","userId","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowIsProgressing","followIsProgressing","InitialState","NewsPost","Text","Avtor","Img","NewsNewsText","addNewPost","type","addNewText","text","newText","NewsReducer","action","NewPost","Id","AxiosInstance","axios","withCredentials","headers","baseURL","DialogsApi","PutDialog","put","GetDialogs","get","GetUserDialog","url","PutMessage","message","post","body","DeleteMessage","messageId","delete","Captcha","AuthApi","AuthUser","then","response","data","AuthLogin","email","password","rememberMe","captcha","AuthLogOut","UserAPI","currentPage","friend","term","followUser","unfollowUser","getUserProfile","getProfileStatus","updateStatus","status","changeProfile","changeMainPhoto","photo","formData","FormData","append","Boolean","window","location","hostname","match","DialogsData","MessagesData","AddNewDialog","dispatch","a","resultCode","ShowDialogs","dialogsData","ShowMessages","messagesData","items","DialogReducer","newMessage","HelperStopSubmit","errorMessages","ErrorsNames","map","error","newElement","split","substring","length","toLowerCase","ErrorObject","i","PostsData","likecount","ProfileStatus","submitWasSuccess","success","setProfileStatus","updateProfilePhoto","getProfile","ProfileReducer","postId","photos","FriendsBarData","Name","OnOf","NavbarReducer","initialized","globalError","showGlobalError","AppReducer","Reducers","combineReducers","DialogsPage","NewsPage","NavbarPage","UsersReducer","AuthReducer","form","formReducer","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","FriendBar","Online","activeClassName","active","FriendsBar","FrindElements","FriendsBarState","f","key","DialogItem","memo","UserDialogUrl","UserProfileUrl","UserId","DialogActive","Dialog","DialogImg","userPhoto","name","maxLength200","maxLengthCreator","SpecialTextArea","SpecialFormCreator","MessageInputReduxForm","reduxForm","submitSucceeded","reset","onSubmit","handleSubmit","FieldCreator","required","Message","useState","ShowMenuMode","setShowMenuMode","DeliteMode","setDeliteMode","isImSender","MessageIm","MessageFriend","onMouseMove","onMouseLeave","viewed","MessageText","MessageTextNotViewed","icon","EditOutlined","onClick","Button","HiddenButton","UserDialog","MessagesElements","CurrentUserId","senderId","v","addedAt","UserInfo","large","FriendElementBar","userInfo","DialogUrl","ActiveBarFriend","setActiveBarFried","styles","ActiveFriend","Friend","FriendInfo","SubMenu","Menu","TestFriendBar","collapsed","toggleCollapsed","setState","FriendsArray","Item","style","width","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","MailOutlined","title","Dialogs","isShowDialogsMenu","setIsShowDialogsMenu","DialogsElements","d","dialog","userName","HiddenDialogs","DialogsItem","HideButton","Messages","Friends","NewMessage","dataForm","SendMessage","messageInput","DialogContainer","params","requestUsers","prevProps","prevState","snapshot","friends","userid","userID","withRouter","StatusWithHooks","editMode","setEditeMode","setStatus","useEffect","IDisCurrent","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","UpdateProfileStatus","maxLength100","SpecialInput","ContactsProfileField","ProfileInfoInputReduxForm","Object","keys","initialValues","contacts","deactivateMode","someoneError","ContactsProfile","ContactTitle","ContactValue","href","ProfileDescriptionBlock","DescriptionBlock","activateMode","direction","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","ProfilePhotoInputFile","Sprops","showUploadList","customRequest","info","onMainPhotoSelected","input__wrapper","UploadOutlined","UploadButton","isFileLoading","LoadingOutlined","PlusOutlined","marginTop","AvatarInput","setFileLoadingState","file","setTimeout","listType","antUpload","useDispatch","ProfileEditMode","setProfileEditeMode","isShowUploadButton","setUploadButtonState","saveMainPhoto","avatar","UserPhoto","img1","alt","inputButton","statusBlock","ProfileInfoForm","UpdateProfileInfo","Post","item","deleteProfilePost","Hr","maxLength30","PostInputReduxForm","MyPosts","console","log","PostsElements","PostsState","p","PostDescription","postInput","posts","MyPostsContainer","Profile","Followed","activeUser","followed","FollowOrUnfollow","ProfileContainer","messages","stopSubmit","SetCurrentUserProfile","HeaderProfile","authLogOut","LoginProfileHeader","login","CurrentUserPhoto","Header","header","HeaderContainer","AppPreloader","AppLoadingBlock","Music","lazy","UsersContainer","Login","Settings","NewsContainer","UserExit","catchAllErrors","reason","httpCode","errorMessage","setGlobalError","initializedApp","addEventListener","removeEventListener","Layout","Content","Sider","LayOut","height","borderRight","UserOutlined","exact","LaptopOutlined","NotificationOutlined","padding","margin","minHeight","SuspenseMainContent","path","render","DialogsContainer","from","fallback","AppContainer","authUser","FirstReactApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","validate","component","placeholder","CaptchaImg","SetAuthUserData","SetCaptchaImg","ProfileResponse","authLogin","ActivateCaptcha","_error","input","meta","hasError","touched","formControl","totalFriendsCount","currentFriendPage","currentSearchTerm","toggleFollowProgressing","isProgressing","isFriend","setCurrentFriendPageAC","FriendsPage","setCurrentPageAC","page","toggleFollow","setUsers","isFriendsArray","setTotalUsersCount","isFriends","setFetching","setCurrentSearchTerm","totalCount","follow","HelperUsersArray","array"],"mappings":"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","file":"static/js/main.7f72ce03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__12Q8B\",\"error\":\"FormControl_error__PW_OO\",\"someoneError\":\"FormControl_someoneError__2EXic\",\"CaptchaControl\":\"FormControl_CaptchaControl__35rhJ\",\"CaptchaImg\":\"FormControl_CaptchaImg__2NoGp\",\"CaptchaInput\":\"FormControl_CaptchaInput__84QcL\",\"CaptchaSpan\":\"FormControl_CaptchaSpan__12nV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__3T8h8\",\"AppPreloader\":\"Preloader_AppPreloader__1lSdQ\",\"AppLoadingBlock\":\"Preloader_AppLoadingBlock__MF2lR\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.71c1f798.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendBar\":\"FriendBar_FriendBar__E98Ls\",\"OnOf\":\"FriendBar_OnOf__3YZDD\",\"active\":\"FriendBar_active__apofq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"FriendBarForDialog_Friend__323JW\",\"ActiveFriend\":\"FriendBarForDialog_ActiveFriend__2bJjF\",\"FriendInfo\":\"FriendBarForDialog_FriendInfo__3uqgN\"};","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img className={s.Preloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__HfEV3\",\"PostDescription\":\"MyPosts_PostDescription__3rGc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2HAWx\",\"Hr\":\"Post_Hr__1lCMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LLWQ5\",\"login\":\"Header_login__2K_em\"};","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.UsersPage.users\r\n}\r\nconst getActiveUser = (state) => {\r\n    return state.ProfilePage.ProfileInfo\r\n}\r\n\r\nexport const getFriends = (state) => {\r\n    return state.UsersPage.friends\r\n}\r\nexport const getUsersSuper = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\nexport const getActiveUserFollowed = createSelector(getUsers, getActiveUser, (users,profile) => {\r\n    if (!profile) {\r\n        return null\r\n    }\r\n    else {\r\n        return users.filter(u => u.id === profile.userId)\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPage.totalUsersCount\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching\r\n}\r\nexport const getFollowIsProgressing = (state) => {\r\n    return state.UsersPage.followIsProgressing\r\n}","const UPDATE_NEWS = 'UPDATE_NEWS'\r\nconst ADD_NEWS = 'ADD_NEWS'\r\n\r\n\r\nlet InitialState = {\r\n    NewsPost: [\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 1, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 2, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 3, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 4, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 5, Avtor: 'Vasya Totechkin', Img: ''}\r\n    ],\r\n    NewsNewsText : 'hey'\r\n}\r\n\r\n\r\nconst NewsReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEWS: {\r\n            let NewPost = {\r\n                Text: state.NewsNewsText,\r\n                Id: 5,\r\n                Img: '',\r\n                Avtor: 'Salam'\r\n            }\r\n            return {\r\n                ...state,\r\n                NewsNewsText: '',\r\n                NewsPost: [...state.NewsPost, NewPost]\r\n            }\r\n        }\r\n        case UPDATE_NEWS:\r\n            return {\r\n                ...state,\r\n                NewsNewsText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = () => ({type: ADD_NEWS})\r\nexport const addNewText = (text) => ({\r\n    type: UPDATE_NEWS,\r\n    newText: text\r\n})\r\n\r\nexport default NewsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1qYDw\",\"item\":\"Navbar_item__3zJ7y\",\"settings\":\"Navbar_settings__1bVOI\",\"active\":\"Navbar_active__1FSHH\",\"friendsBar\":\"Navbar_friendsBar__DCjSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginProfileHeader\":\"HeaderProfile_LoginProfileHeader__2X-c6\"};","import * as axios from \"axios\";\r\n\r\nconst AxiosInstance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '4edd74e2-330b-411c-8c39-ff31c4d6ced4'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0'\r\n})\r\n\r\nexport const DialogsApi = {\r\n    PutDialog(userId) {\r\n        return AxiosInstance.put(`dialogs/${userId}`)\r\n    },\r\n    GetDialogs() {\r\n        return AxiosInstance.get('dialogs')\r\n    },\r\n    GetUserDialog(userId) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.get(url)\r\n    },\r\n    PutMessage(userId, message) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.post(url,{body: message})\r\n    },\r\n    DeleteMessage (messageId) {\r\n        return AxiosInstance.delete(`dialogs/messages/${messageId}`)\r\n    }\r\n}\r\n\r\nexport const Captcha = () => {\r\n    return AxiosInstance.get('security/get-captcha-url')\r\n\r\n}\r\nexport const AuthApi = {\r\n    AuthUser() {\r\n        return AxiosInstance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    AuthLogin(email,password,rememberMe,captcha=null){\r\n        return AxiosInstance.post(`auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    AuthLogOut(){\r\n        return AxiosInstance.post(`auth/logout`)\r\n\r\n    }\r\n}\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10,friend = null,term='') {\r\n        return AxiosInstance.get(`users?page=${currentPage}&count=${pageSize}&friend=${friend}&term=${term}`)\r\n            .then(response => {\r\n                    return response.data\r\n                }\r\n            )\r\n    },\r\n    followUser(userId) {\r\n        return AxiosInstance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    unfollowUser(userId) {\r\n        return AxiosInstance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserProfile(userId) {\r\n        return AxiosInstance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    getProfileStatus(userId){\r\n        return AxiosInstance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus (status){\r\n        return AxiosInstance.put(`profile/status/`,{status: status})\r\n    },\r\n    changeProfile(userId, profile){\r\n        return AxiosInstance.put(`profile`,{userId, ...profile})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    changeMainPhoto(photo){\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return AxiosInstance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {DialogsApi} from \"../../Api/Api\";\r\n\r\nconst SET_DIALOGS = 'SET_DIALOGS'\r\nconst SET_MESSAGES = 'SET_MESSAGES'\r\nconst ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE'\r\n\r\n\r\nlet InitialState = {\r\n        DialogsData: null,\r\n        MessagesData: null\r\n}\r\n\r\nconst DialogReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, action.newMessage]\r\n            }\r\n        }\r\n        case SET_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                MessagesData: action.messagesData\r\n            }\r\n        }\r\n        case SET_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                DialogsData: action.dialogsData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ShowMessagesAC = (messagesData) => ({type: SET_MESSAGES, messagesData})\r\nconst SetDialogs = (dialogsData) => ({type: SET_DIALOGS, dialogsData})\r\nconst AddNewMessage = (newMessage) => ({type: ADD_NEW_MESSAGE, newMessage})\r\n\r\n\r\nexport const AddNewDialog = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.PutDialog(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ShowDialogs())\r\n    }\r\n}\r\nexport const ShowDialogs = () => async (dispatch) => {\r\n    let response = await DialogsApi.GetDialogs()\r\n    dispatch(SetDialogs(response.data))\r\n}\r\nexport const ShowMessages = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.GetUserDialog(id)\r\n    dispatch(ShowMessagesAC(response.data.items))\r\n}\r\nexport const SendMessage = (userid,message) => async (dispatch) => {\r\n    let response = await DialogsApi.PutMessage(userid, message)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(AddNewMessage(response.data.data.message))\r\n    }\r\n}\r\nexport const DeleteMessage = (messageId, userID) => async (dispatch) => {\r\n    let response = await DialogsApi.DeleteMessage(messageId)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(ShowMessages(userID))\r\n    }\r\n}\r\n\r\nexport default DialogReducer;","export const HelperStopSubmit = (errorMessages) => {\r\n    let ErrorsNames = errorMessages.map(error => {\r\n        let newElement = error.split('->')[1]\r\n        return newElement.substring(0, newElement.length - 1).toLowerCase()\r\n    })\r\n    let ErrorObject = {}\r\n    for (let i = 0; i < errorMessages.length; i ++){\r\n        ErrorObject[ErrorsNames[i]] = errorMessages[i]\r\n    }\r\n    return ErrorObject\r\n}","import {UserAPI} from \"../../Api/Api\";\r\nimport {SetCurrentUserProfile} from \"./AuthReducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {HelperStopSubmit} from \"../../Utils/HelperStopSubmit\";\r\n\r\n\r\nconst PROFILE_ADD_POST = 'PROFILE_ADD_POST'\r\nconst PROFILE_SET_PROFILE = 'PROFILE_SET_PROFILE'\r\nconst PROFILE_SET_PROFILE_STATUS = 'PROFILE_SET_PROFILE_STATUS'\r\nconst PROFILE_DELETE_POST = 'PROFILE_DELETE_POST'\r\nconst PROFILE_UPDATE_PHOTO = 'PROFILE_UPDATE_PHOTO'\r\nconst PROFILE_IS_FETCHING_PHOTO_TOGGLE = 'PROFILE_IS_FETCHING_PHOTO_TOGGLE'\r\nconst SUBMIT_WAS_SUCCESS = 'SUBMIT_WAS_SUCCESS'\r\n\r\n\r\nlet InitialState = {\r\n    PostsData: [\r\n        {message: 'Heil Hitler', id: 1, likecount: 1488},\r\n        {message: 'salam', id: 2, likecount: 228},\r\n    ],\r\n    ProfileInfo: null,\r\n    ProfileStatus: '',\r\n    isFetching: false,\r\n    submitWasSuccess: false\r\n}\r\n\r\n\r\nconst ProfileReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SUBMIT_WAS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                submitWasSuccess: action.success\r\n            }\r\n        }\r\n        case PROFILE_DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                PostsData: state.PostsData.filter(u => u.id !== action.postId)\r\n            }\r\n        }\r\n\r\n        case PROFILE_ADD_POST: {\r\n            let NewPost = {\r\n                message: action.post,\r\n                id: 5,\r\n                likecount: 148,\r\n            }\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, NewPost]\r\n            }\r\n        }\r\n        case PROFILE_SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: action.ProfileInfo\r\n            }\r\n        case PROFILE_SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                ProfileStatus: action.status\r\n            }\r\n        case PROFILE_UPDATE_PHOTO:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: {...state.ProfileInfo,photos: {...action.photo}},\r\n            }\r\n        case PROFILE_IS_FETCHING_PHOTO_TOGGLE:{\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deleteProfilePost = (postId) => ({type: PROFILE_DELETE_POST, postId})\r\nexport const submitWasSuccess = (success) => ({type: SUBMIT_WAS_SUCCESS, success})\r\nexport const addNewPost = (post) => ({type: PROFILE_ADD_POST, post})\r\nexport const setProfile = (ProfileInfo) => ({type: PROFILE_SET_PROFILE, ProfileInfo})\r\nexport const setProfileStatus = (status) => ({type: PROFILE_SET_PROFILE_STATUS, status})\r\nconst updateProfilePhoto = (photo) => ({type: PROFILE_UPDATE_PHOTO, photo})\r\nconst isFetchingPhotoToggle = () => ({type: PROFILE_IS_FETCHING_PHOTO_TOGGLE})\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getProfileStatus(userId)\r\n    dispatch(setProfileStatus(response))\r\n\r\n}\r\nexport const UpdateProfileStatus = (status) => async (dispatch) => {\r\n    // try {\r\n        let response = await UserAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setProfileStatus(status))\r\n        }\r\n    // } catch (error){\r\n    //     console.log(error)\r\n    // }\r\n\r\n}\r\nexport  const UpdateProfileInfo = (id, profile) => async (dispatch) => {\r\n    let response = await UserAPI.changeProfile(id, {...profile})\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfile(id))\r\n        dispatch(submitWasSuccess(true))\r\n    }\r\n    else {\r\n        let errorMessages = response.messages.length > 0 ? response.messages : 'Some error'\r\n        dispatch(stopSubmit('ProfileInfoInput', {'contacts' : {...HelperStopSubmit(errorMessages)}}))\r\n    }\r\n\r\n}\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getUserProfile(userId)\r\n    dispatch(setProfile(response))\r\n\r\n}\r\nexport const saveMainPhoto = (photo) => async (dispatch) => {\r\n    dispatch(isFetchingPhotoToggle())\r\n    let response = await UserAPI.changeMainPhoto(photo)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(isFetchingPhotoToggle())\r\n        dispatch(updateProfilePhoto(response.data.data.photos))\r\n        dispatch(SetCurrentUserProfile(response.data.data.photos.large))\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;","let InitialState = {\r\n    FriendsBarData: [\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/7e/ee/0a/7eee0a15c3bb16b777c64116e8cfaafe.jpg',\r\n            Name: 'Danil',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 45\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/89/57/16/8957167672cdfdb7fba47ef531f7a3eb.jpg',\r\n            Name: 'Sveta',\r\n            OnOf: 'of',\r\n            id: 13\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/originals/6c/b6/4c/6cb64c7f040e63059639a6df25969588.jpg',\r\n            Name: 'Kalim',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 12\r\n        }\r\n    ]\r\n}\r\n\r\nconst NavbarReducer = (state = InitialState,acton) => {\r\n    return state\r\n}\r\n\r\nexport default NavbarReducer","import {authUser} from \"./AuthReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'APP_INITIALIZED_SUCCESS'\r\nconst SOME_GLOBAL_ERROR = 'SOME_GLOBAL_ERROR'\r\n\r\nlet InitialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nlet AppReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SOME_GLOBAL_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            }\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nconst showGlobalError = (error) => ({type: SOME_GLOBAL_ERROR, error})\r\n\r\nexport const initializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\nexport const setGlobalError = (error) => async (dispatch) => {\r\n    dispatch(showGlobalError(error))\r\n    setTimeout(() => {dispatch(showGlobalError(null))},5000)\r\n}\r\n\r\n\r\nexport default AppReducer","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport DialogReducer from \"./Reducers/DialogsReducer\";\r\nimport ProfileReducer from \"./Reducers/ProfileReducer\";\r\nimport NewsReducer from \"./Reducers/NewsReducer\";\r\nimport NavbarReducer from \"./Reducers/NavbarReducer\";\r\nimport UsersReducer from \"./Reducers/UsersReducer\";\r\nimport AuthReducer from \"./Reducers/AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\n\r\nlet Reducers = combineReducers({\r\n    DialogsPage : DialogReducer,\r\n    ProfilePage: ProfileReducer,\r\n    NewsPage: NewsReducer,\r\n    NavbarPage: NavbarReducer,\r\n    UsersPage: UsersReducer,\r\n    Auth: AuthReducer,\r\n    form: formReducer,\r\n    App: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(Reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store\r\n\r\nwindow.__store__ = store","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    let ComponentWithSuspense = (props) => {\r\n        return <Suspense fallback={<div>Минуточку...</div>}><Component {...props}/></Suspense>\r\n    }\r\n    return ComponentWithSuspense\r\n}","import React from \"react\";\r\nimport s from './FriendBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FriendBar = (props) => {\r\n    let id = '/friends/' + props.id;\r\n    let Online = (props.OnOf == 'of') ? '': <img className={s.OnOf} src= {props.OnOf}/>\r\n    return (\r\n        <div className={s.FriendBar}>\r\n            <img src= {props.Img}/>\r\n            <NavLink activeClassName={s.active} to={id}> {props.Name} {Online} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendBar","import React from \"react\";\r\nimport FriendBar from \"./FrindBar/FriendBar\";\r\n\r\nconst FriendsBar = (props) => {\r\n    let FrindElements = props.FriendsBarState.map(f => <FriendBar key = {f.id} Img = {f.Img} Name= {f.Name} OnOf = {f.OnOf} id = {f.id}/>)\r\n    return (\r\n        <div> {FrindElements} </div>\r\n    )\r\n}\r\n\r\nexport default FriendsBar","import FriendsBar from './FriendsBar'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        FriendsBarState: state.NavbarPage.FriendsBarData\r\n    }\r\n}\r\n\r\nconst FriendsBarContainer = connect(mapStateToProps, null)(FriendsBar)\r\n\r\nexport default FriendsBarContainer","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto\r\n    from '../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg'\r\n\r\nconst DialogItem = React.memo(props => {\r\n    let UserDialogUrl = '/dialogs/' + props.id\r\n    let UserProfileUrl = '/profile/' + props.id\r\n    return (\r\n        <div>\r\n            <div className={props.id == props.UserId? s.DialogActive:s.Dialog}>\r\n                <NavLink to={UserProfileUrl}>\r\n                <img className={s.DialogImg} src={props.photo === null ? userPhoto : props.photo}/>\r\n            </NavLink>\r\n                <NavLink to={UserDialogUrl}>\r\n                    <span >{props.name}</span>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default DialogItem","import {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../Common/FormsControls/FormControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {FieldCreator} from \"../Common/FormsControls/FieldCreator\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\n\r\nlet maxLength200 = maxLengthCreator(200)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst MessageInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('messageInput', [required,maxLength200], SpecialTextArea, 'Write message', null)}\r\n        <button> Send </button>\r\n    </form>\r\n}\r\n\r\nconst MessageInputReduxForm = reduxForm({form: 'messageInputer'})(MessageInputForm)\r\n\r\nexport default MessageInputReduxForm","import s from \"../Message/Message.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport {Button} from \"antd\";\r\n\r\nconst Message = React.memo(props => {\r\n    let [ShowMenuMode, setShowMenuMode] = useState(false)\r\n    let [DeliteMode, setDeliteMode] = useState(false)\r\n    let activateDeliteModeToggle = () => {\r\n        setDeliteMode(!DeliteMode)\r\n    }\r\n    const onDeleteMessage = () => {\r\n        props.DeleteMessage(props.id, props.userId)\r\n    }\r\n    return <div className={props.isImSender ? s.MessageIm : s.MessageFriend}\r\n                onMouseMove={() => {\r\n                    setShowMenuMode(true)\r\n                }}\r\n                onMouseLeave={() => {\r\n                    setShowMenuMode(false)\r\n                }}>\r\n        <div className={props.viewed ? s.MessageText : s.MessageTextNotViewed}>\r\n            <img src={!props.isImSender && props.photo && props.photo}/>\r\n            <span>\r\n                {props.body}\r\n                {ShowMenuMode && <Button icon={<EditOutlined/>} onClick={activateDeliteModeToggle}/>}\r\n            </span>\r\n            <Button onClick={onDeleteMessage} className={DeliteMode ? s.Button : s.HiddenButton}>Delete</Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\nexport default Message","import React from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst UserDialog = (props) => {\r\n    let MessagesElements = null\r\n    if (props.MessagesData){\r\n        MessagesElements = props.MessagesData.map(message => <Message DeleteMessage = {props.DeleteMessage}\r\n                                                                      userId = {props.UserId}\r\n                                                                      isImSender = {props.CurrentUserId === message.senderId}\r\n                                                                      body = {message.body}\r\n                                                                      key={message.id} v\r\n                                                                      viewed = {message.viewed}\r\n                                                                      id = {message.id}\r\n                                                                      addedAt = {message.addedAt}\r\n                                                                      photo = {props.UserInfo && props.UserInfo.photos.large}\r\n\r\n        />)\r\n    }\r\n    return <div>\r\n        {MessagesElements}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default UserDialog","import React, {useState} from \"react\";\r\nimport styles from './FriendBarForDialog.module.css'\r\n\r\nimport userPhoto\r\n    from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst FriendElementBar = ({userInfo,AddNewDialog}) => {\r\n    const StartDialogWithFriend = () => {\r\n        AddNewDialog(userInfo.id)\r\n    }\r\n    let DialogUrl = userInfo && '/dialogs/' + userInfo.id\r\n    let [ActiveBarFriend, setActiveBarFried] = useState(false)\r\n    return <div onMouseMove={() => {setActiveBarFried(true)}}\r\n                onMouseLeave={() => {setActiveBarFried(false)}}\r\n                className={ActiveBarFriend? styles.ActiveFriend: styles.Friend}>\r\n        <NavLink to={DialogUrl}>\r\n        <span onClick={StartDialogWithFriend} className={styles.FriendInfo}>\r\n        <img src={userInfo.photos.large === null ? userPhoto : userInfo.photos.large}/> {userInfo.name}\r\n        </span>\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default FriendElementBar","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu, Button } from 'antd';\r\nimport {\r\n    MailOutlined,\r\n} from '@ant-design/icons';\r\nimport FriendElementBar from \"./FriendElementBar\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass TestFriendBar extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let FriendsArray = this.props.FriendsArray.map(friend => <Menu.Item key={friend.id}>\r\n            <FriendElementBar AddNewDialog = {this.props.AddNewDialog} key={friend.id} userInfo = {friend}/>\r\n        </Menu.Item>)\r\n\r\n        return (\r\n            <div style={{ width: 256 }}>\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"light\"\r\n                    inlineCollapsed={this.state.collapsed}\r\n                >\r\n                    <SubMenu key=\"sub1\" icon={<MailOutlined/>} title=\"Friends\">\r\n                        {FriendsArray}\r\n                    </SubMenu>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestFriendBar","import React, {useState} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageInputReduxForm from \"./DialogsForm\";\r\nimport UserDialog from \"./UserDialog\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\nimport TestFriendBar from \"./FriendBarForDialogs/TestFriendBar\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let [isShowDialogsMenu, setIsShowDialogsMenu] = useState(true)\r\n    let DialogsElements = null\r\n    let UserInfo = null\r\n    if (props.DialogsData) {\r\n        if (props.UserId) {\r\n            UserInfo = props.DialogsData.filter(d => d.id == props.UserId)\r\n        }\r\n        DialogsElements = props.DialogsData.map(dialog => <DialogItem\r\n            UserId={props.UserId} key={dialog.id}\r\n            photo={dialog.photos.large} name={dialog.userName}\r\n            id={dialog.id}/>);\r\n    }\r\n    const addMessage = (dataForm) => {\r\n        props.SendMessage(props.UserId, dataForm.messageInput)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={isShowDialogsMenu? s.Dialogs: s.HiddenDialogs}>\r\n            {isShowDialogsMenu? <div className={s.DialogsItem}>\r\n                <Button onClick={() => {setIsShowDialogsMenu(false)}}> Hide Dialogs</Button>\r\n                {DialogsElements}\r\n            </div>: <Button className={s.HideButton} onClick={() => {setIsShowDialogsMenu(true)}}> Show Dialogs </Button>}\r\n\r\n            <div className={s.Messages}>\r\n                <div><UserDialog UserInfo={UserInfo && UserInfo[0]} DeleteMessage={props.DeleteMessage}\r\n                                 UserId={props.UserId}\r\n                                 CurrentUserId={props.CurrentUserId} MessagesData={props.MessagesData}/></div>\r\n            </div>\r\n            <div className={s.FriendBar}>\r\n                <TestFriendBar AddNewDialog = {props.AddNewDialog} FriendsArray = {props.Friends}/>\r\n            </div>\r\n            <div className={s.NewMessage}>\r\n                <MessageInputReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {AddNewDialog, DeleteMessage, SendMessage, ShowDialogs, ShowMessages} from \"../../Redux/Reducers/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {requestUsers} from \"../../Redux/Reducers/UsersReducer\";\r\n\r\nclass DialogContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (userId){\r\n            this.props.ShowMessages(userId)\r\n        }\r\n        this.props.ShowDialogs()\r\n        if (this.props.Friends.length === 0){\r\n            this.props.requestUsers(1,9,true)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n            let userId = this.props.match.params.userId\r\n            if (userId){\r\n                this.props.ShowMessages(userId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs {...this.props} DialogsData = {this.props.DialogsData}\r\n                        MessagesData = {this.props.MessagesData}\r\n                        UserId = {this.props.match.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.DialogsPage.DialogsData,\r\n        MessagesData: state.DialogsPage.MessagesData,\r\n        CurrentUserId: state.Auth.CurrentUserId,\r\n        Friends: state.UsersPage.friends\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestUsers, AddNewDialog,ShowDialogs,ShowMessages,SendMessage,DeleteMessage}),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(DialogContainer)","import React, {useEffect, useState} from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport { Space, Card } from 'antd';\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n    let [editMode, setEditeMode] = useState(false)\r\n    let [status, setStatus] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.ProfileStatus)\r\n    },[props.ProfileStatus])\r\n\r\n    const  activeEditMode = () => {\r\n            setEditeMode(true)\r\n    }\r\n    const deactiveEditMode = () => {\r\n        setEditeMode(false)\r\n        props.UpdateProfileStatus(status)\r\n    }\r\n    const changeInputStatus = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    if (props.IDisCurrent){\r\n\r\n    return <>\r\n        {!editMode && props.ProfileStatus &&\r\n        <div>\r\n            <span onDoubleClick={activeEditMode}><span>{props.ProfileStatus}</span></span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={changeInputStatus} autoFocus={true} onBlur={deactiveEditMode}\r\n                    value={status}/>\r\n        </div>}\r\n    </>}\r\n    else {\r\n        return <>\r\n            {props.ProfileStatus && <div>\r\n                <span><span>{props.ProfileStatus}</span></span>\r\n            </div>}\r\n\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nexport default StatusWithHooks","import {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\nimport s from \"../../Common/FormsControls/FormControl.module.css\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\nconst SpecialInput = SpecialFormCreator('input')\r\n\r\nconst ProfileInfoInputForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('fullName', [required,maxLength100], SpecialInput, 'Write your name', {})}\r\n        {FieldCreator('aboutMe', [required], SpecialTextArea, 'About you', null)}\r\n        {FieldCreator('lookingForAJob',null, SpecialInput,null,{type: 'checkbox'},'Looking for a job:')}\r\n        {FieldCreator('lookingForAJobDescription', [required], SpecialTextArea, 'Descriptions for looking', null)}\r\n        Your contacts:\r\n        <hr></hr>\r\n        {Object.keys(props.initialValues.contacts).map(key => <ContactsProfileField key = {key} name= {key}/>)}\r\n        <button> Save </button>\r\n        <Button type={'button'} onClick={props.deactivateMode}> Escape </Button>\r\n        {props.error && <div className={s.someoneError}>\r\n            <span>{props.error}</span>\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst ContactsProfileField = ({name}) => {\r\n    return <div>\r\n        {FieldCreator('contacts.' + name, [maxLength100],SpecialInput,name, null)}\r\n    </div>\r\n}\r\n\r\n\r\nconst ProfileInfoInputReduxForm = reduxForm({form: 'ProfileInfoInput'})(ProfileInfoInputForm)\r\n\r\nexport default ProfileInfoInputReduxForm","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Space, Card } from 'antd';\r\n\r\n\r\nconst ProfileDescriptionBlock = (props) => {\r\n    return  <div className={s.DescriptionBlock}>\r\n        <div>\r\n        {props.IDisCurrent && <Button onClick={props.activateMode}> Change profile </Button>}\r\n        </div>\r\n        <Space direction=\"vertical\">\r\n            <Card title=\"Info\" style={{ width: 300 }}>\r\n                <p>About me: {props.ProfileInfo.aboutMe}</p>\r\n                <p>Full Name: {props.ProfileInfo.fullName}</p>\r\n                <p>Looking For A Job: {props.ProfileInfo.lookingForAJob\r\n                    ? <span>Yes\r\n                <p>LookingForAJob Description: {props.ProfileInfo.lookingForAJobDescription}</p></span>\r\n                    : <span>No</span>\r\n                }</p>\r\n                <p className={s.contacts}>\r\n                    <h5> Contacts </h5>\r\n                    {Object.keys(props.ProfileInfo.contacts).map(key => <ContactsProfile key = {key} ContactTitle={key} ContactValue={props.ProfileInfo.contacts[key]}/>\r\n                    )}\r\n                </p>\r\n            </Card>\r\n        </Space>\r\n\r\n        {/*<div>About me: {props.ProfileInfo.aboutMe}</div>*/}\r\n        {/*<div>Full Name: {props.ProfileInfo.fullName}</div>*/}\r\n        {/*<div>Looking For A Job: {props.ProfileInfo.lookingForAJob*/}\r\n        {/*    ? <span>Yes*/}\r\n        {/*        <div>LookingForAJob Description: {props.ProfileInfo.lookingForAJobDescription}</div></span>*/}\r\n        {/*    : <span>No</span>*/}\r\n        {/*}</div>*/}\r\n        {/*<div className={s.contacts}>*/}\r\n        {/*    {Object.keys(props.ProfileInfo.contacts).map(key => <ContactsProfile key = {key} ContactTitle={key} ContactValue={props.ProfileInfo.contacts[key]}/>*/}\r\n        {/*    )}*/}\r\n        {/*</div>*/}\r\n    </div>\r\n}\r\n\r\nconst ContactsProfile = ({ContactTitle, ContactValue}) => {\r\n    return <div>\r\n        {ContactValue && <>{ContactTitle}: <a href={ContactValue}> {ContactValue}</a></>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileDescriptionBlock","import s from \"../ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst ProfilePhotoInputFile = (props) => {\r\n    const Sprops = {\r\n        showUploadList: false,\r\n        customRequest(info){\r\n            props.onMainPhotoSelected(info)\r\n        },\r\n    };\r\n    return <div className={s.input__wrapper}>\r\n        <Upload {...Sprops}>\r\n            <Button  icon={<UploadOutlined />}>Change avatar</Button>\r\n        </Upload>\r\n    </div>\r\n}\r\n\r\nexport default ProfilePhotoInputFile","import s from \"../ProfileInfo.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport {Upload, Button} from 'antd';\r\nimport {LoadingOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport UserPhoto\r\n    from \"../../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\";\r\n\r\n\r\nconst AvatarInput = (props) => {\r\n    let [isFileLoading, setFileLoadingState] = useState(false)\r\n    const Sprops = {\r\n        onChange(info){\r\n            if (info.file.status === 'uploading'){\r\n                setFileLoadingState(true)\r\n            }\r\n        },\r\n        showUploadList: false,\r\n        customRequest(info) {\r\n            props.onMainPhotoSelected(info)\r\n            setTimeout(() => {setFileLoadingState(false)},2000)\r\n        },\r\n    };\r\n\r\n    return <div>\r\n                <Upload {...Sprops}\r\n                          name=\"avatar\"\r\n                          listType=\"picture-card\"\r\n                          className={s.antUpload}>\r\n                <UploadButton isFileLoading = {isFileLoading}/>\r\n            </Upload>\r\n    </div>\r\n}\r\nconst UploadButton = ({isFileLoading}) => {\r\n    return <div>\r\n        {isFileLoading? <LoadingOutlined/>:<PlusOutlined/>}\r\n        <div style={{marginTop: 8}}>Upload photo</div>\r\n    </div>\r\n}\r\n\r\nexport default AvatarInput","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport UserPhoto\r\n    from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm\";\r\nimport ProfileDescriptionBlock from \"./ProfileDescriptionBlock\";\r\nimport ProfilePhotoInputFile from \"./FileInputs/ProfilePhotoInputFile\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {submitWasSuccess} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport {Button} from 'antd';\r\nimport AvatarInput from \"./FileInputs/AvatarInput\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let DialogUrl = props.ProfileInfo && '/dialogs/' + props.ProfileInfo.userId\r\n    let dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (props.submitWasSuccess) {\r\n            deactivateMode()\r\n            dispatch(submitWasSuccess(false))\r\n        }\r\n    }, [props.submitWasSuccess, dispatch])\r\n    let [ProfileEditMode, setProfileEditeMode] = useState(false)\r\n    let [isShowUploadButton, setUploadButtonState] = useState(false)\r\n    let activateMode = () => {\r\n        setProfileEditeMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setProfileEditeMode(false)\r\n    }\r\n    let changeProfile = (data) => {\r\n        props.UpdateProfileInfo(props.CurrentUserId, data)\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.file) {\r\n            props.saveMainPhoto(e.file)\r\n        }\r\n    }\r\n    const startDialog = () => {\r\n        props.AddNewDialog(props.ProfileInfo.userId)\r\n    }\r\n    if (!props.ProfileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    const IDisCurrent = props.ProfileInfo.userId === props.CurrentUserId\r\n\r\n    return (\r\n        <div>\r\n            <div onMouseMove={() => {setUploadButtonState(true)}}\r\n                 onMouseLeave={() => {setUploadButtonState(false)}}\r\n            >\r\n            {ProfileEditMode\r\n                ? <AvatarInput\r\n                    IDisCurrent={IDisCurrent}\r\n                    avatar={props.ProfileInfo.photos.large ? props.ProfileInfo.photos.large : UserPhoto}\r\n                    onMainPhotoSelected={onMainPhotoSelected}/>\r\n                : props.isFetching ? <Preloader/> :\r\n                    <div>\r\n                        <img className={s.img1} alt='avatar'\r\n                              src={props.ProfileInfo.photos.large ? props.ProfileInfo.photos.large : UserPhoto}/>\r\n                    </div>\r\n            }\r\n            {IDisCurrent && !ProfileEditMode && isShowUploadButton &&\r\n            <div className={s.inputButton}>\r\n                <ProfilePhotoInputFile onMainPhotoSelected={onMainPhotoSelected}/>\r\n            </div>\r\n            }\r\n            </div>\r\n\r\n            <div className={s.statusBlock}>\r\n                <StatusWithHooks UpdateProfileStatus={props.UpdateProfileStatus} ProfileStatus={props.ProfileStatus}\r\n                                 IDisCurrent={IDisCurrent}/>\r\n            </div>\r\n\r\n            <NavLink to={DialogUrl}>\r\n                {!IDisCurrent && <Button onClick={startDialog}>Start dialog</Button>}\r\n            </NavLink>\r\n\r\n            {ProfileEditMode\r\n                ? <ProfileInfoForm initialValues={props.ProfileInfo} deactivateMode={deactivateMode}\r\n                                   onSubmit={changeProfile}/>\r\n                : <ProfileDescriptionBlock IDisCurrent={IDisCurrent} activateMode={activateMode}\r\n                                           ProfileInfo={props.ProfileInfo}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    const id = props.id\n    const deleteProfilePost = () => {\n        props.deleteProfilePost(id)\n    }\n    return(<div className={s.item}>\n            <img src = 'https://avatars.mds.yandex.net/get-zen_doc/171120/pub_5b44a8cd3e56d900a85b258e_5b44aa46a2e4e400a92221a3/scale_1200'/>\n            {props.message}\n            <div><span>\n                Like {' '}\n                {props.likecount}\n            </span></div>\n            <button onClick={deleteProfilePost}>Delete</button>\n            <hr className={s.Hr}/>\n        </div>\n    );\n}\nexport default Post;","\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\n\r\nconst maxLength30 =  maxLengthCreator(20)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst PostInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('postInput', [required,maxLength30], SpecialTextArea, 'Write new post', null)}\r\n        <button>add</button>\r\n    </form>\r\n\r\n}\r\nconst PostInputReduxForm = reduxForm({form: 'postInput'})(PostInputForm)\r\nexport default PostInputReduxForm","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport PostInputReduxForm from \"./MyPostsForm\";\n\n\nconst MyPosts = React.memo(props => {\n    console.log(props)\n    let PostsElements = [...props.PostsState].map(p => <Post deleteProfilePost = {props.deleteProfilePost} key={p.id} message={p.message} likecount={p.likecount}\n                                                        id={p.id}/>);\n    let addPost = (dataForm) => {\n        props.addNewPost(dataForm.postInput)\n    }\n    return (<div className={s.PostDescription}>\n            <h3> My posts</h3>\n            <div>\n                <PostInputReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElements}\n            </div>\n        </div>\n    );\n})\n\nexport default MyPosts;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\nimport {addNewPost, deleteProfilePost} from \"../../../Redux/Reducers/ProfileReducer\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        PostsState: state.ProfilePage.PostsData\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps,\n    {addNewPost, deleteProfilePost})(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n    let Followed = null\n    if (props.activeUser) {\n        if (props.activeUser[0]){\n            Followed = props.activeUser[0].followed\n        }\n    }\n\n    return (<div className={s.Profile}>\n            <ProfileInfo CurrentUserId = {props.CurrentUserId}\n                UpdateProfileStatus = {props.UpdateProfileStatus}\n                         ProfileStatus = {props.ProfileStatus}\n                         ProfileInfo={props.ProfileInfo}\n                         UpdateProfileInfo = {props.UpdateProfileInfo}\n                         saveMainPhoto = {props.saveMainPhoto}\n                         isFetching = {props.isFetching}\n                         submitWasSuccess = {props.submitWasSuccess}\n                         FollowOrUnfollow ={props.FollowOrUnfollow}\n                         Followed = {Followed}\n                         AddNewDialog = {props.AddNewDialog}\n            />\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\n\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getProfileStatus, saveMainPhoto, UpdateProfileInfo,\r\n    UpdateProfileStatus\r\n} from \"../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {FollowOrUnfollow} from \"../../Redux/Reducers/UsersReducer\";\r\nimport {getActiveUserFollowed, getUsersSuper} from \"../../Redux/Selectors/UsersSelector\";\r\nimport {AddNewDialog} from \"../../Redux/Reducers/DialogsReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.CurrentUserId\r\n            this.props.getProfile(userId)\r\n            this.props.getProfileStatus(userId)\r\n\r\n        } else {\r\n            this.props.getProfileStatus(userId)\r\n            this.props.getProfile(userId)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (!this.props.match.params.userId && prevProps.match.params.userId) {\r\n            this.props.getProfile(this.props.CurrentUserId)\r\n            this.props.getProfileStatus(this.props.CurrentUserId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} ProfileInfo={this.props.ProfileInfo}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfileInfo: state.ProfilePage.ProfileInfo,\r\n        CurrentUserId: state.Auth.CurrentUserId,\r\n        ProfileStatus: state.ProfilePage.ProfileStatus,\r\n        isFetching: state.ProfilePage.isFetching,\r\n        submitWasSuccess: state.ProfilePage.submitWasSuccess,\r\n        activeUser: getActiveUserFollowed(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getProfileStatus, UpdateProfileStatus, UpdateProfileInfo, saveMainPhoto,FollowOrUnfollow, AddNewDialog\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport UserPhoto from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\nimport styles from './HeaderProfile.module.css'\r\n\r\nconst HeaderProfile = (props) => {\r\n    const onLogOut = () => {\r\n        props.authLogOut()\r\n    }\r\n    return <div>\r\n        <button onClick={onLogOut}>Log Out</button>\r\n        <span className={styles.LoginProfileHeader}>{props.login}</span>\r\n\r\n        {props.CurrentUserPhoto? <img src = {props.CurrentUserPhoto}/>: <img src = {UserPhoto}/> }\r\n    </div>\r\n}\r\n\r\nexport default HeaderProfile;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderProfile from \"./HeaderProfile/HeaderProfile\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}><NavLink to={`/profile/${props.userId}`}>\r\n            <img src='https://bumper-stickers.ru/69359-thickbox_default/logotip-atlanta-thrashers-atlanta-tresherz.jpg'/>\r\n        </NavLink>\r\n            <div className={s.login}>\r\n                {props.isAuth ?\r\n                    <HeaderProfile login={props.login}\r\n                                   CurrentUserPhoto={props.CurrentUserPhoto}\r\n                                   authLogOut = {props.authLogOut}\r\n                    />\r\n\r\n                    : <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogOut} from \"../../Redux/Reducers/AuthReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        login: state.Auth.login,\r\n        userId: state.Auth.CurrentUserId,\r\n        isAuth: state.Auth.isAuth,\r\n        CurrentUserPhoto: state.Auth.CurrentUserPhoto\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {authLogOut})(HeaderContainer)","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst AppPreloader = () => {\r\n    return <div className={s.AppLoadingBlock}>\r\n        <img className={s.AppPreloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default AppPreloader","import 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport './TestLay.css'\r\n\r\nimport React from \"react\";\r\nimport './App.css';\r\nimport store from \"./Redux/ReduxStore\";\r\nimport {BrowserRouter, HashRouter, Route, withRouter, Switch, Redirect, NavLink} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializedApp, setGlobalError} from \"./Redux/Reducers/AppReducer\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport AppPreloader from \"./Components/Common/Preloader/AppPreloader\";\r\nimport {withSuspense} from \"./HOC/withSuspense\";\r\nimport s from \"./Components/Navbar/Navbar.module.css\";\r\n\r\nconst Music = React.lazy(() => import(\"./Components/Music/Music\"));\r\nconst UsersContainer = React.lazy(() => import(\"./Components/Users/UsersContainer\"));\r\nconst Login = React.lazy(() => import(\"./Components/Login/Login\"));\r\nconst Friends = React.lazy(() => import(\"./Components/Friends/FriendsContainer\"));\r\nconst Settings = React.lazy(() => import(\"./Components/Settings/Settings\"));\r\nconst NewsContainer = React.lazy(() => import(\"./Components/News/NewsContainer\"));\r\nconst UserExit = React.lazy(() => import(\"./Components/Common/Exit\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    catchAllErrors = (data) => {\r\n        if (data.reason.response) {\r\n            let httpCode = data.reason.response.status\r\n            let errorMessage = data.reason.response.data.message ? data.reason.response.data.message : ''\r\n            this.props.setGlobalError('Error: ' + httpCode + ' ' + errorMessage)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <AppPreloader/>\r\n        }\r\n        return (<div>\r\n            <LayOut globalError={this.props.globalError} isAuth = {this.props.isAuth}/>\r\n            {/*<div className='app-wrapper'>*/}\r\n            {/*    /!*<HeaderContainer/>*!/*/}\r\n            {/*    /!*<Navbar/>*!/*/}\r\n            {/*    /!*<SuspenseMainContent globalError={this.props.globalError}/>*!/*/}\r\n            {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\nconst LayOut = (props) => {\r\n    return <Layout>\r\n        <Header className=\"header\">\r\n            <HeaderContainer/>\r\n        </Header>\r\n        <Layout>\r\n            <Sider width={200} className=\"site-layout-background\">\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Profile\">\r\n                        <Menu.Item key=\"1\"><NavLink activeClassName={s.active} exact to ='/profile'>Profile</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"2\"><NavLink activeClassName={s.active} to= '/friends'>Friends</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"3\"><NavLink activeClassName={s.active} to='/music'>Music</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"4\"><NavLink activeClassName={s.active} to ='/dialogs'>Messages</NavLink></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Social\">\r\n                        <Menu.Item key=\"5\"><NavLink activeClassName={s.active}to= '/users'>Find Users</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"6\"><NavLink activeClassName={s.active} to = '/news'>News</NavLink></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"Other\">\r\n                        <Menu.Item key=\"9\"><NavLink activeClassName={s.active} to= '/settings'> Settings</NavLink></Menu.Item>\r\n                        {props.isAuth && <Menu.Item key=\"10\"><NavLink activeClassName={s.active} to= '/exit'> Exit</NavLink></Menu.Item>}\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item><NavLink to = '/profile'>Home</NavLink></Breadcrumb.Item>\r\n                    <Breadcrumb.Item><NavLink to = '/dialogs'>Dialogs</NavLink></Breadcrumb.Item>\r\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 280,\r\n                    }}\r\n                >\r\n                    <SuspenseMainContent globalError={props.globalError}/>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    </Layout>\r\n}\r\n\r\nconst MainContent = (props) => {\r\n    return <div className='app-wrapper-content'>\r\n        {props.globalError && <div className='globalError'>{props.globalError}</div>}\r\n        <Switch>\r\n            <Route path='/dialogs/:userId?' render={() => <DialogsContainer/>}/>\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n            <Route path='/exit' render={() => <UserExit/>}/>\r\n            <Route path='/users' render={() => <UsersContainer/>}/>\r\n            <Route path='/news' render={() => <NewsContainer/>}/>\r\n            <Route path='/settings' render={() => <Settings/>}/>\r\n            <Route path='/music' render={() => <Music/>}/>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n            <Route path='/friends' render={() => <Friends/>}/>\r\n            <Redirect exact from=\"/\" to=\"/profile\"/>\r\n            <Route path='/*' render={() => <div>404 NOT FOUND</div>}/>\r\n        </Switch>\r\n    </div>\r\n}\r\nconst SuspenseMainContent = withSuspense(MainContent)\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.App.initialized,\r\n    globalError: state.App.globalError,\r\n    isAuth: state.Auth.isAuth,\r\n})\r\nconst AppContainer = compose(\r\n    connect(mapStateToProps, {initializedApp, setGlobalError}),\r\n    withRouter,\r\n)(App)\r\n\r\nconst FirstReactApp = () => {\r\n    return <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default FirstReactApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport FirstReactApp from \"./App\";\n\n\nReactDOM.render(\n        <FirstReactApp/>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__299da\",\"HiddenDialogs\":\"Dialogs_HiddenDialogs__3Sfui\",\"HideButton\":\"Dialogs_HideButton__1O5n3\",\"FriendBar\":\"Dialogs_FriendBar__3WqGv\",\"DialogsItem\":\"Dialogs_DialogsItem__2LzZ5\",\"Dialog\":\"Dialogs_Dialog__3bHRR\",\"DialogActive\":\"Dialogs_DialogActive__3giip\",\"DialogImg\":\"Dialogs_DialogImg__1DrZT\",\"Messages\":\"Dialogs_Messages__336IC\",\"active\":\"Dialogs_active__2OoQ0\",\"NewMessage\":\"Dialogs_NewMessage__1dPWM\",\"EnterMessage\":\"Dialogs_EnterMessage__TvDS4\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value='')  => {\r\n    if (!value) {\r\n        return undefined\r\n    }\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__3Vj5B\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__C-bRr\",\"contacts\":\"ProfileInfo_contacts__3PUYi\",\"inputButton\":\"ProfileInfo_inputButton__tOQHY\",\"avatar\":\"ProfileInfo_avatar__2aUDa\",\"avatar-uploader\":\"ProfileInfo_avatar-uploader__2ss8_\",\"ant-upload\":\"ProfileInfo_ant-upload__ZaqrS\",\"statusBlock\":\"ProfileInfo_statusBlock__17Bjf\"};","module.exports = __webpack_public_path__ + \"static/media/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.79eb8ca5.jpg\";","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FieldCreator = (name, validate, component, placeholder, props, text = '') => {\r\n    return <div>\r\n        {text}\r\n        <Field name={name} validate={validate} component={component} placeholder={placeholder} {...props}/>\r\n    </div>\r\n}\r\n","import {AuthApi, Captcha, UserAPI} from \"../../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_CURRENT_USER_PROFILE = 'SET_CURRENT_USER_PROFILE'\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_CAPTCHA_IMG = 'SET_CAPTCHA_IMG'\r\n\r\nlet InitialState = {\r\n    CurrentUserId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    CurrentUserPhoto: null,\r\n    CaptchaImg: ''\r\n}\r\n\r\nlet AuthReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case SET_CURRENT_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                CurrentUserPhoto: action.CurrentUserPhoto\r\n            }\r\n        case SET_CAPTCHA_IMG:\r\n            return {\r\n                ...state,\r\n                CaptchaImg: action.CaptchaImg\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst SetAuthUserData = (CurrentUserId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {CurrentUserId, email, login, isAuth}\r\n})\r\nexport const SetCurrentUserProfile = (CurrentUserPhoto) => ({type: SET_CURRENT_USER_PROFILE, CurrentUserPhoto})\r\nconst SetCaptchaImg = (CaptchaImg) => ({type: SET_CAPTCHA_IMG, CaptchaImg})\r\n\r\n\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthUser()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data\r\n        dispatch(SetAuthUserData(id, email, login, true))\r\n        let ProfileResponse = await UserAPI.getUserProfile(response.data.id)\r\n        dispatch(SetCurrentUserProfile(ProfileResponse.photos.large))\r\n    }\r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogin(email, password, rememberMe,captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUser())\r\n        dispatch(SetCaptchaImg(''))\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        if (errorMessage === 'Incorrect anti-bot symbols'){\r\n            dispatch(ActivateCaptcha())\r\n        }\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n}\r\n\r\nexport const authLogOut = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(SetAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const ActivateCaptcha = () => async (dispatch) => {\r\n    let response = await Captcha()\r\n    dispatch(SetCaptchaImg(response.data.url))\r\n}\r\n\r\n\r\nexport default AuthReducer","import React from \"react\";\r\nimport styles from './FormControl.module.css'\r\n\r\n\r\nexport const SpecialFormCreator = (Component) =>  ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return <div className={styles.formControl + ' ' + (hasError?styles.error:'')}>\r\n        <div>\r\n            <Component {...input} {...props}/>\r\n        </div>\r\n        { hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageIm\":\"Message_MessageIm__3nX-9\",\"MessageFriend\":\"Message_MessageFriend__3QzP8\",\"line\":\"Message_line__cs9eu\",\"MessageText\":\"Message_MessageText__1xUqN\",\"MessageTextNotViewed\":\"Message_MessageTextNotViewed__2rFRp\",\"HiddenButton\":\"Message_HiddenButton__3Etuu\",\"Button\":\"Message_Button__2PNq6\"};","import {UserAPI} from \"../../Api/Api\";\r\n\r\nconst FOLLOW_TOGGLE = 'FOLLOW_USER_TOGGLE'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_FETCHING = 'SET_USERS_FETCHING'\r\nconst TOGGLE_FOLLOW_PROGRESSING = 'USERS_TOGGLE_FOLLOW_PROGRESSING'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_CURRENT_FRIEND_PAGE = 'SET_CURRENT_FRIEND_PAGE'\r\nconst SET_CURRENT_SEARCH_TERM = 'SET_CURRENT_SEARCH_TERM'\r\n\r\n\r\n\r\nlet InitialState = {\r\n    users: [],\r\n    friends: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    totalFriendsCount: 3,\r\n    isFetching: false,\r\n    followIsProgressing: [],\r\n    currentPage: 1,\r\n    currentFriendPage: 1,\r\n    currentSearchTerm: ''\r\n}\r\n\r\nconst UsersReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                currentSearchTerm: action.term\r\n            }\r\n        case SET_CURRENT_FRIEND_PAGE:\r\n            return {\r\n                ...state,\r\n                currentFriendPage: action.FriendsPage\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case FOLLOW_TOGGLE:\r\n            let HelperUsersArray = (array) => {\r\n                return array.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            if (action.isFriend) {\r\n                return {\r\n                    ...state,\r\n                    friends: HelperUsersArray(state.friends)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                users: HelperUsersArray(state.users)\r\n            }\r\n        case SET_USERS:\r\n            if (action.isFriendsArray){\r\n                return {\r\n                    ...state,\r\n                    friends: [...action.users]\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            if (action.isFriends){\r\n                return {\r\n                    ...state,\r\n                    totalFriendsCount: action.totalUsersCount\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOW_PROGRESSING:\r\n            return {\r\n                ...state,\r\n                followIsProgressing: action.isProgressing\r\n                    ? [...state.followIsProgressing, action.userId]\r\n                    : state.followIsProgressing.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFollowProgressing = (isProgressing, userId,isFriend) => ({\r\n    type: TOGGLE_FOLLOW_PROGRESSING, isProgressing, userId, isFriend\r\n})\r\nexport const setCurrentFriendPageAC = (FriendsPage) => ({type: SET_CURRENT_FRIEND_PAGE,FriendsPage})\r\nexport const setCurrentPageAC = (page) => ({type: SET_CURRENT_PAGE,page})\r\nexport const toggleFollow = (userId,isFriend) => ({type: FOLLOW_TOGGLE, userId,isFriend})\r\nexport const setUsers = (users,isFriendsArray) => ({type: SET_USERS, users,isFriendsArray})\r\nexport const setTotalUsersCount = (totalUsersCount, isFriends=false) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount,isFriends})\r\nexport const setFetching = (isFetching) => ({type: SET_FETCHING, isFetching})\r\nexport const setCurrentSearchTerm = (term) => ({type: SET_CURRENT_SEARCH_TERM,term})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize, friend=false,term='') => async (dispatch) => {\r\n    dispatch(setFetching(true))   //активируем крутилку\r\n    if (term) {\r\n        dispatch(setCurrentSearchTerm(term))\r\n    }\r\n    let response = await UserAPI.getUsers(currentPage, pageSize, friend,term)\r\n    dispatch(setFetching(false)) //снимаем крутилку\r\n    dispatch(setUsers(response.items,friend)) //сетаем юзеров с респонса\r\n    dispatch(setTotalUsersCount(response.totalCount,friend))//сетаем общее число юзеров\r\n\r\n}\r\nexport const FollowOrUnfollow = (userId,follow,isFriend = false) => async (dispatch) => {\r\n    dispatch(toggleFollowProgressing(true, userId))\r\n    if (follow){\r\n        let response = await UserAPI.followUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId,isFriend))\r\n        }}\r\n    else {let response = await UserAPI.unfollowUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId,isFriend))\r\n        }}\r\n    dispatch(toggleFollowProgressing(false, userId))\r\n}\r\n\r\n\r\nexport default UsersReducer;"],"sourceRoot":""}