{"version":3,"sources":["Components/Users/UserElement/UserElement.jsx","Components/Users/UserElement/UserElement.module.css","Components/Common/Paginator/Paginator.jsx","Components/Common/Paginator/Paginator.module.css","Components/Friends/Friends.jsx","Components/Friends/FriendsContainer.jsx"],"names":["UserElement","React","memo","user","followIsProgressing","FollowOrUnfollow","to","id","className","s","UserPhoto","src","photos","large","userPhoto","followed","disabled","some","onClick","name","status","module","exports","Paginator","onPageChanged","totalItems","pageSize","currentPage","currentPageAc","pagesCount","Math","ceil","dispatch","useDispatch","setCurrentPage","useCallback","page","useState","pageLeft","changePageLeft","pageRight","changePageRight","pages","i","push","map","p","Friends","props","totalUsersCount","currentFriendPage","setCurrentFriendPageAC","isFetching","Preloader","friends","u","key","toggleFollow","FriendsContainer","requestUsers","this","length","Component","compose","connect","state","UsersPage","getPageSize","totalFriendsCount","getIsFetching","getFollowIsProgressing","withAuthRedirect"],"mappings":"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","file":"static/js/4.af47e115.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from './UserElement.module.css'\r\nimport userPhoto\r\n    from '../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst UserElement = React.memo(({user,followIsProgressing,FollowOrUnfollow}) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img className={s.UserPhoto} src={user.photos.large === null ? userPhoto : user.photos.large}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {(user.followed)\r\n                    ? <button disabled={followIsProgressing.some(id => id === user.id)}\r\n                        onClick={() => {FollowOrUnfollow(user.id,false)}}>Unfollow</button>\r\n\r\n                    : <button disabled={followIsProgressing.some(id => id === user.id)}\r\n                        onClick={() => {FollowOrUnfollow(user.id,true)}}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div> {user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>Москва</div>\r\n                <div>Россия</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n})\r\n\r\n\r\nexport default UserElement\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserPhoto\":\"UserElement_UserPhoto__1YiJQ\"};","import s from \"./Paginator.module.css\";\r\nimport React, {useCallback, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const Paginator = React.memo(({onPageChanged, totalItems, pageSize,currentPage, currentPageAc}) => {\r\n    let pagesCount = Math.ceil(totalItems / pageSize)\r\n    const dispatch = useDispatch()\r\n    const setCurrentPage = useCallback((page) => {\r\n        dispatch(currentPageAc(page))},[dispatch,currentPageAc])\r\n    let [pageLeft,changePageLeft] = useState(1)\r\n    let [pageRight, changePageRight] = useState(10)\r\n\r\n    let changeSizeToRight = () => {\r\n        setCurrentPage(pageLeft+10)\r\n        changePageRight(pageRight+10)\r\n        changePageLeft(pageLeft+10)\r\n    }\r\n\r\n    let changeSizeToLeft = () => {\r\n        setCurrentPage(pageLeft-10)\r\n        changePageRight(pageRight-10)\r\n        changePageLeft(pageLeft-10)\r\n    }\r\n\r\n    let MaxLeft = () => {\r\n        changePageRight(10)\r\n        changePageLeft(1)\r\n        setCurrentPage(1)\r\n\r\n    }\r\n\r\n    let MaxRight = () => {\r\n        changePageLeft(pagesCount-10)\r\n        changePageRight(pagesCount)\r\n        setCurrentPage(pagesCount-10)\r\n    }\r\n\r\n    let pages = []\r\n    for (let i = pageLeft; i <= pageRight; i++) {\r\n        pages.push(i)\r\n        if (i >= pagesCount) {\r\n            break\r\n        }\r\n    }\r\n    return <div>\r\n        {(pageLeft === 1)? null\r\n            : <span><button onClick={pageLeft > 1 && MaxLeft}>back</button>\r\n                <button onClick={pageLeft > 1 && changeSizeToLeft}>←</button></span> }\r\n        {pages.map(p => {\r\n            return <button onClick={() => {\r\n                setCurrentPage(p)\r\n                onPageChanged(p)\r\n            }} className={currentPage === p && s.currentPage}>{p}</button>\r\n        })}\r\n        <button onClick={pageRight < pagesCount && changeSizeToRight}>→</button>\r\n        <button onClick={pageRight < pagesCount && MaxRight}>next</button>\r\n    </div>\r\n})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Paginator_currentPage__333nY\"};","import React from \"react\";\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport UserElement from \"../Users/UserElement/UserElement\";\r\n\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                onPageChanged={props.onPageChanged} totalItems={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentFriendPage}\r\n                currentPageAc = {props.setCurrentFriendPageAC}\r\n            />\r\n            {props.isFetching ? <Preloader/> :\r\n                props.friends.map(u => <UserElement key={u.id}\r\n                                                  user={u}\r\n                                                  toggleFollow={props.toggleFollow}\r\n                                                  followIsProgressing={props.followIsProgressing}\r\n                                                  FollowOrUnfollow={props.FollowOrUnfollow}\r\n                />)\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    FollowOrUnfollow,\r\n    requestUsers,\r\n    setCurrentFriendPageAC,\r\n    setCurrentPageAC\r\n} from \"../../Redux/Reducers/UsersReducer\";\r\nimport {\r\n    getFollowIsProgressing, getFriends,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsersSuper\r\n} from \"../../Redux/Selectors/UsersSelector\";\r\nimport Friends from \"./Friends\";\r\n\r\nclass FriendsContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {pageSize,currentFriendPage} = this.props\r\n        if (this.props.friends.length === 0) {\r\n            this.props.requestUsers(currentFriendPage,pageSize,true)\r\n        }\r\n\r\n    }\r\n    onPageChanged = (p) => {\r\n        let {pageSize} = this.props\r\n        this.props.requestUsers(p,pageSize, true)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div><Friends {...this.props} onPageChanged={this.onPageChanged}/></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.UsersPage.friends,\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: state.UsersPage.totalFriendsCount,\r\n        isFetching: getIsFetching(state),\r\n        followIsProgressing: getFollowIsProgressing(state),\r\n        currentFriendPage: state.UsersPage.currentFriendPage\r\n    }\r\n}\r\nexport default  compose(\r\n    connect(mapStateToProps, {requestUsers, FollowOrUnfollow,setCurrentFriendPageAC}),\r\n    withAuthRedirect\r\n)(FriendsContainer)"],"sourceRoot":""}