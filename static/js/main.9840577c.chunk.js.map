{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Redux/Reducers/NewsReducer.js","Api/Api.js","Redux/Selectors/UsersSelector.js","Components/Navbar/Navbar.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Utils/Validators/validators.js","serviceWorker.js","Redux/Reducers/DialogsReducer.js","Utils/HelperStopSubmit.js","Redux/Reducers/ProfileReducer.js","Redux/Reducers/NavbarReducer.js","Redux/Reducers/AppReducer.js","Redux/ReduxStore.js","HOC/withSuspense.js","Components/Navbar/FrindsBar/FrindBar/FriendBar.jsx","Components/Navbar/FrindsBar/FriendsBar.jsx","Components/Navbar/FrindsBar/FriendsBarContainer.jsx","Components/Navbar/Navbar.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/DialogsForm.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/UserDialog.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/Profile/ProfileInfo/Status/StatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfoForm.jsx","Components/Profile/ProfileInfo/ProfileDescriptionBlock.jsx","Components/Profile/ProfileInfo/ProfilePhotoInputFile.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/HeaderProfile/HeaderProfile.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Common/Preloader/AppPreloader.js","App.js","index.js","Components/Common/FormsControls/FieldCreator.jsx","Components/Dialogs/Dialogs.module.css","Redux/Reducers/AuthReducer.js","Components/Common/FormsControls/FormControl.js","accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg","Components/Common/FormsControls/FormControl.module.css","Components/Common/Preloader/Preloader.module.css","Redux/Reducers/UsersReducer.js","HOC/withAuthRedirect.js","Components/Common/Preloader/Preloader.jsx","accepts/images/Bean Eater-1s-200px.svg","Components/Navbar/FrindsBar/FrindBar/FriendBar.module.css"],"names":["module","exports","InitialState","NewsPost","Text","id","Avtor","Img","NewsNewsText","addNewPost","type","addNewText","text","newText","NewsReducer","state","action","NewPost","Id","AxiosInstance","axios","withCredentials","headers","baseURL","DialogsApi","PutDialog","userId","put","GetDialogs","get","GetUserDialog","url","PutMessage","message","post","body","Captcha","AuthApi","AuthUser","then","response","data","AuthLogin","email","password","rememberMe","captcha","AuthLogOut","UserAPI","getUsers","currentPage","pageSize","followUser","unfollowUser","delete","getUserProfile","getProfileStatus","updateStatus","status","changeProfile","profile","changeMainPhoto","photo","formData","FormData","append","UsersPage","users","getUsersSuper","createSelector","filter","u","getActiveUserFollowed","ProfilePage","ProfileInfo","getPageSize","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowIsProgressing","followIsProgressing","required","value","maxLengthCreator","maxLength","length","Boolean","window","location","hostname","match","DialogsData","MessagesData","AddNewDialog","dispatch","a","resultCode","ShowDialogs","dialogsData","DialogReducer","newMessage","messagesData","HelperStopSubmit","errorMessages","ErrorsNames","map","error","newElement","split","substring","toLowerCase","ErrorObject","i","PostsData","likecount","ProfileStatus","submitWasSuccess","success","setProfileStatus","updateProfilePhoto","getProfile","ProfileReducer","postId","photos","FriendsBarData","Name","OnOf","NavbarReducer","initialized","AppReducer","Reducers","combineReducers","DialogsPage","NewsPage","NavbarPage","UsersReducer","Auth","AuthReducer","form","formReducer","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Component","FriendBar","props","Online","className","s","src","activeClassName","active","to","FriendsBar","FrindElements","FriendsBarState","f","key","FriendsBarContainer","connect","Navbar","nav","item","exact","friendsBar","settings","DialogItem","React","memo","UserDialogUrl","UserProfileUrl","Dialog","DialogImg","userPhoto","name","maxLength200","SpecialTextArea","SpecialFormCreator","MessageInputReduxForm","reduxForm","submitSucceeded","reset","onSubmit","handleSubmit","FieldCreator","Message","UserDialog","MessagesElements","Dialogs","DialogsElements","dialog","large","userName","DialogsItem","Messages","align","NewMessage","dataForm","SendMessage","UserId","messageInput","DialogContainer","this","params","ShowMessages","prevProps","prevState","snapshot","items","userid","withAuthRedirect","withRouter","StatusWithHooks","useState","editMode","setEditeMode","setStatus","useEffect","IDisCurrent","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","UpdateProfileStatus","maxLength100","SpecialInput","ContactsProfileField","ProfileInfoInputReduxForm","Object","keys","initialValues","contacts","onClick","deactivateMode","someoneError","ContactsProfile","ContactTitle","ContactValue","href","ProfileDescriptionBlock","DescriptionBlock","activateMode","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","ProfilePhotoInputFile","input__wrapper","onMainPhotoSelected","input__file","multiple","htmlFor","input__file_button","input__file_icon_wrapper","alt","width","input__file_button_text","useDispatch","ProfileEditMode","setProfileEditeMode","Preloader","CurrentUserId","img1","UserPhoto","inputButton","target","files","saveMainPhoto","ProfileInfoForm","UpdateProfileInfo","Post","deleteProfilePost","Hr","maxLength30","PostInputReduxForm","MyPosts","console","log","PostsElements","PostsState","p","PostDescription","postInput","posts","MyPostsContainer","Profile","Followed","activeUser","followed","FollowOrUnfollow","ProfileContainer","messages","stopSubmit","SetCurrentUserProfile","HeaderProfile","authLogOut","login","CurrentUserPhoto","Header","header","isAuth","HeaderContainer","AppPreloader","AppLoadingBlock","PreloaderLogo","Music","lazy","UsersContainer","Login","Friends","Settings","NewsContainer","initializedApp","SuspenseMainContent","path","render","DialogsContainer","fallback","AppContainer","authUser","FirstReactApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","validate","component","placeholder","CaptchaImg","SetAuthUserData","SetCaptchaImg","ProfileResponse","authLogin","errorMessage","ActivateCaptcha","_error","input","meta","hasError","touched","styles","formControl","toggleFollowProgressing","isProgressing","setCurrentPageAC","page","toggleFollow","setFetching","requestUsers","totalCount","follow","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.9840577c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__HfEV3\",\"PostDescription\":\"MyPosts_PostDescription__3rGc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2HAWx\",\"Hr\":\"Post_Hr__1lCMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LLWQ5\",\"login\":\"Header_login__2K_em\"};","const UPDATE_NEWS = 'UPDATE_NEWS'\r\nconst ADD_NEWS = 'ADD_NEWS'\r\n\r\n\r\nlet InitialState = {\r\n    NewsPost: [\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 1, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 2, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 3, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 4, Avtor: 'Vasya Totechkin', Img: ''},\r\n        {Text: 'Сегодня баба Нюра засолила огурцы', id: 5, Avtor: 'Vasya Totechkin', Img: ''}\r\n    ],\r\n    NewsNewsText : 'hey'\r\n}\r\n\r\n\r\nconst NewsReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEWS: {\r\n            let NewPost = {\r\n                Text: state.NewsNewsText,\r\n                Id: 5,\r\n                Img: '',\r\n                Avtor: 'Salam'\r\n            }\r\n            return {\r\n                ...state,\r\n                NewsNewsText: '',\r\n                NewsPost: [...state.NewsPost, NewPost]\r\n            }\r\n        }\r\n        case UPDATE_NEWS:\r\n            return {\r\n                ...state,\r\n                NewsNewsText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = () => ({type: ADD_NEWS})\r\nexport const addNewText = (text) => ({\r\n    type: UPDATE_NEWS,\r\n    newText: text\r\n})\r\n\r\nexport default NewsReducer","import * as axios from \"axios\";\r\n\r\nconst AxiosInstance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'ee39ac85-4aec-4b4f-8785-7b2e7fb6edb4'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0'\r\n})\r\n\r\nexport const DialogsApi = {\r\n    PutDialog(userId) {\r\n        return AxiosInstance.put(`dialogs/${userId}`)\r\n    },\r\n    GetDialogs() {\r\n        return AxiosInstance.get('dialogs')\r\n    },\r\n    GetUserDialog(userId) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.get(url)\r\n    },\r\n    PutMessage(userId, message) {\r\n        let url = 'dialogs/' + userId +'/messages'\r\n        return AxiosInstance.post(url,{body: message})\r\n    }\r\n}\r\n\r\nexport const Captcha = () => {\r\n    return AxiosInstance.get('security/get-captcha-url')\r\n\r\n}\r\nexport const AuthApi = {\r\n    AuthUser() {\r\n        return AxiosInstance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    AuthLogin(email,password,rememberMe,captcha=null){\r\n        return AxiosInstance.post(`auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    AuthLogOut(){\r\n        return AxiosInstance.post(`auth/logout`)\r\n\r\n    }\r\n}\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return AxiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                    return response.data\r\n                }\r\n            )\r\n    },\r\n    followUser(userId) {\r\n        return AxiosInstance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    unfollowUser(userId) {\r\n        return AxiosInstance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserProfile(userId) {\r\n        return AxiosInstance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n\r\n    },\r\n    getProfileStatus(userId){\r\n        return AxiosInstance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus (status){\r\n        return AxiosInstance.put(`profile/status/`,{status: status})\r\n    },\r\n    changeProfile(userId, profile){\r\n        return AxiosInstance.put(`profile`,{userId, ...profile})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    changeMainPhoto(photo){\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return AxiosInstance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.UsersPage.users\r\n}\r\nconst getActiveUser = (state) => {\r\n    return state.ProfilePage.ProfileInfo\r\n}\r\n\r\nexport const getUsersSuper = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\nexport const getActiveUserFollowed = createSelector(getUsers, getActiveUser, (users,profile) => {\r\n    if (!profile) {\r\n        return null\r\n    }\r\n    else {\r\n        return users.filter(u => u.id === profile.userId)\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPage.totalUsersCount\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching\r\n}\r\nexport const getFollowIsProgressing = (state) => {\r\n    return state.UsersPage.followIsProgressing\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1qYDw\",\"item\":\"Navbar_item__3zJ7y\",\"settings\":\"Navbar_settings__1bVOI\",\"active\":\"Navbar_active__1FSHH\",\"friendsBar\":\"Navbar_friendsBar__DCjSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__3Vj5B\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__C-bRr\",\"contacts\":\"ProfileInfo_contacts__3PUYi\",\"inputButton\":\"ProfileInfo_inputButton__tOQHY\",\"input__wrapper\":\"ProfileInfo_input__wrapper__2h0NE\",\"input__file\":\"ProfileInfo_input__file__1C0bl\",\"input__file_icon_wrapper\":\"ProfileInfo_input__file_icon_wrapper__3LDHf\",\"input__file_button_text\":\"ProfileInfo_input__file_button_text__2X1rf\",\"input__file_button\":\"ProfileInfo_input__file_button__2WuXX\"};","export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value='')  => {\r\n    if (!value) {\r\n        return undefined\r\n    }\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {DialogsApi} from \"../../Api/Api\";\r\n\r\nconst SET_DIALOGS = 'SET_DIALOGS'\r\nconst SET_MESSAGES = 'SET_MESSAGES'\r\nconst ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE'\r\n\r\n\r\nlet InitialState = {\r\n        DialogsData: null,\r\n        MessagesData: null\r\n}\r\n\r\nconst DialogReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, action.newMessage]\r\n            }\r\n        }\r\n        case SET_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                MessagesData: action.messagesData\r\n            }\r\n        }\r\n        case SET_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                DialogsData: action.dialogsData\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst ShowMessagesAC = (messagesData) => ({type: SET_MESSAGES, messagesData})\r\nconst SetDialogs = (dialogsData) => ({type: SET_DIALOGS, dialogsData})\r\nconst AddNewMessage = (newMessage) => ({type: ADD_NEW_MESSAGE, newMessage})\r\n\r\n\r\nexport const AddNewDialog = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.PutDialog(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(ShowDialogs())\r\n    }\r\n}\r\nexport const ShowDialogs = () => async (dispatch) => {\r\n    let response = await DialogsApi.GetDialogs()\r\n    dispatch(SetDialogs(response.data))\r\n}\r\nexport const ShowMessages = (id) => async (dispatch) => {\r\n    let response = await DialogsApi.GetUserDialog(id)\r\n    dispatch(ShowMessagesAC(response.data.items))\r\n}\r\nexport const SendMessage = (userid,message) => async (dispatch) => {\r\n    let response = await DialogsApi.PutMessage(userid, message)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(AddNewMessage(response.data.data.message))\r\n    }\r\n}\r\n\r\nexport default DialogReducer;","export const HelperStopSubmit = (errorMessages) => {\r\n    let ErrorsNames = errorMessages.map(error => {\r\n        let newElement = error.split('->')[1]\r\n        return newElement.substring(0, newElement.length - 1).toLowerCase()\r\n    })\r\n    let ErrorObject = {}\r\n    for (let i = 0; i < errorMessages.length; i ++){\r\n        ErrorObject[ErrorsNames[i]] = errorMessages[i]\r\n    }\r\n    return ErrorObject\r\n}","import {UserAPI} from \"../../Api/Api\";\r\nimport {SetCurrentUserProfile} from \"./AuthReducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {HelperStopSubmit} from \"../../Utils/HelperStopSubmit\";\r\n\r\n\r\nconst PROFILE_ADD_POST = 'PROFILE_ADD_POST'\r\nconst PROFILE_SET_PROFILE = 'PROFILE_SET_PROFILE'\r\nconst PROFILE_SET_PROFILE_STATUS = 'PROFILE_SET_PROFILE_STATUS'\r\nconst PROFILE_DELETE_POST = 'PROFILE_DELETE_POST'\r\nconst PROFILE_UPDATE_PHOTO = 'PROFILE_UPDATE_PHOTO'\r\nconst PROFILE_IS_FETCHING_PHOTO_TOGGLE = 'PROFILE_IS_FETCHING_PHOTO_TOGGLE'\r\nconst SUBMIT_WAS_SUCCESS = 'SUBMIT_WAS_SUCCESS'\r\n\r\n\r\nlet InitialState = {\r\n    PostsData: [\r\n        {message: 'Heil Hitler', id: 1, likecount: 1488},\r\n        {message: 'salam', id: 2, likecount: 228},\r\n    ],\r\n    ProfileInfo: null,\r\n    ProfileStatus: '',\r\n    isFetching: false,\r\n    submitWasSuccess: false\r\n}\r\n\r\n\r\nconst ProfileReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SUBMIT_WAS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                submitWasSuccess: action.success\r\n            }\r\n        }\r\n        case PROFILE_DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                PostsData: state.PostsData.filter(u => u.id !== action.postId)\r\n            }\r\n        }\r\n\r\n        case PROFILE_ADD_POST: {\r\n            let NewPost = {\r\n                message: action.post,\r\n                id: 5,\r\n                likecount: 148,\r\n            }\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, NewPost]\r\n            }\r\n        }\r\n        case PROFILE_SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: action.ProfileInfo\r\n            }\r\n        case PROFILE_SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                ProfileStatus: action.status\r\n            }\r\n        case PROFILE_UPDATE_PHOTO:\r\n            return {\r\n                ...state,\r\n                ProfileInfo: {...state.ProfileInfo,photos: {...action.photo}},\r\n            }\r\n        case PROFILE_IS_FETCHING_PHOTO_TOGGLE:{\r\n            return {\r\n                ...state,\r\n                isFetching: !state.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deleteProfilePost = (postId) => ({type: PROFILE_DELETE_POST, postId})\r\nexport const submitWasSuccess = (success) => ({type: SUBMIT_WAS_SUCCESS, success})\r\nexport const addNewPost = (post) => ({type: PROFILE_ADD_POST, post})\r\nexport const setProfile = (ProfileInfo) => ({type: PROFILE_SET_PROFILE, ProfileInfo})\r\nexport const setProfileStatus = (status) => ({type: PROFILE_SET_PROFILE_STATUS, status})\r\nconst updateProfilePhoto = (photo) => ({type: PROFILE_UPDATE_PHOTO, photo})\r\nconst isFetchingPhotoToggle = () => ({type: PROFILE_IS_FETCHING_PHOTO_TOGGLE})\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getProfileStatus(userId)\r\n    dispatch(setProfileStatus(response))\r\n\r\n}\r\nexport const UpdateProfileStatus = (status) => async (dispatch) => {\r\n    let response = await UserAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileStatus(status))\r\n    }\r\n}\r\nexport  const UpdateProfileInfo = (id, profile) => async (dispatch) => {\r\n    let response = await UserAPI.changeProfile(id, {...profile})\r\n    if (response.resultCode === 0) {\r\n        dispatch(getProfile(id))\r\n        dispatch(submitWasSuccess(true))\r\n    }\r\n    else {\r\n        let errorMessages = response.messages.length > 0 ? response.messages : 'Some error'\r\n        dispatch(stopSubmit('ProfileInfoInput', {'contacts' : {...HelperStopSubmit(errorMessages)}}))\r\n    }\r\n\r\n}\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await UserAPI.getUserProfile(userId)\r\n    dispatch(setProfile(response))\r\n\r\n}\r\nexport const saveMainPhoto = (photo) => async (dispatch) => {\r\n    dispatch(isFetchingPhotoToggle())\r\n    let response = await UserAPI.changeMainPhoto(photo)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(isFetchingPhotoToggle())\r\n        dispatch(updateProfilePhoto(response.data.data.photos))\r\n        dispatch(SetCurrentUserProfile(response.data.data.photos.large))\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;","let InitialState = {\r\n    FriendsBarData: [\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/7e/ee/0a/7eee0a15c3bb16b777c64116e8cfaafe.jpg',\r\n            Name: 'Danil',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 45\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/736x/89/57/16/8957167672cdfdb7fba47ef531f7a3eb.jpg',\r\n            Name: 'Sveta',\r\n            OnOf: 'of',\r\n            id: 13\r\n        },\r\n        {\r\n            Img: 'https://i.pinimg.com/originals/6c/b6/4c/6cb64c7f040e63059639a6df25969588.jpg',\r\n            Name: 'Kalim',\r\n            OnOf: 'https://banner2.cleanpng.com/20180705/qav/kisspng-computer-icons-online-and-offline-online-shopping-hotspot-5b3e1403a4b394.9852004415307950116746.jpg',\r\n            id: 12\r\n        }\r\n    ]\r\n}\r\n\r\nconst NavbarReducer = (state = InitialState,acton) => {\r\n    return state\r\n}\r\n\r\nexport default NavbarReducer","import {authUser} from \"./AuthReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'APP_INITIALIZED_SUCCESS'\r\n\r\nlet InitialState = {\r\n    initialized: false\r\n}\r\n\r\nlet AppReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default AppReducer","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport DialogReducer from \"./Reducers/DialogsReducer\";\r\nimport ProfileReducer from \"./Reducers/ProfileReducer\";\r\nimport NewsReducer from \"./Reducers/NewsReducer\";\r\nimport NavbarReducer from \"./Reducers/NavbarReducer\";\r\nimport UsersReducer from \"./Reducers/UsersReducer\";\r\nimport AuthReducer from \"./Reducers/AuthReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport AppReducer from \"./Reducers/AppReducer\";\r\n\r\n\r\nlet Reducers = combineReducers({\r\n    DialogsPage : DialogReducer,\r\n    ProfilePage: ProfileReducer,\r\n    NewsPage: NewsReducer,\r\n    NavbarPage: NavbarReducer,\r\n    UsersPage: UsersReducer,\r\n    Auth: AuthReducer,\r\n    form: formReducer,\r\n    App: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(Reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store\r\n\r\nwindow.__store__ = store","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    let ComponentWithSuspense = (props) => {\r\n        return <Suspense fallback={<div>Минуточку...</div>}><Component {...props}/></Suspense>\r\n    }\r\n    return ComponentWithSuspense\r\n}","import React from \"react\";\r\nimport s from './FriendBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FriendBar = (props) => {\r\n    let id = '/friends/' + props.id;\r\n    let Online = (props.OnOf == 'of') ? '': <img className={s.OnOf} src= {props.OnOf}/>\r\n    return (\r\n        <div className={s.FriendBar}>\r\n            <img src= {props.Img}/>\r\n            <NavLink activeClassName={s.active} to={id}> {props.Name} {Online} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendBar","import React from \"react\";\r\nimport FriendBar from \"./FrindBar/FriendBar\";\r\n\r\nconst FriendsBar = (props) => {\r\n    let FrindElements = props.FriendsBarState.map(f => <FriendBar key = {f.id} Img = {f.Img} Name= {f.Name} OnOf = {f.OnOf} id = {f.id}/>)\r\n    return (\r\n        <div> {FrindElements} </div>\r\n    )\r\n}\r\n\r\nexport default FriendsBar","import FriendsBar from './FriendsBar'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        FriendsBarState: state.NavbarPage.FriendsBarData\r\n    }\r\n}\r\n\r\nconst FriendsBarContainer = connect(mapStateToProps, null)(FriendsBar)\r\n\r\nexport default FriendsBarContainer","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsBarContainer from \"./FrindsBar/FriendsBarContainer\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (<nav className= {s.nav}>\r\n            <div className= {s.item}>  < NavLink activeClassName={s.active} exact to ='/'> Profile</NavLink></div>\r\n            <div className= {s.item}> <NavLink activeClassName={s.active} to ='/dialogs'>  Messages</NavLink> </div>\r\n            <div className={s.item}> <NavLink activeClassName={s.active} to = '/news'>  News</NavLink> </div>\r\n            <div className={s.item}> <NavLink activeClassName={s.active} to='/music'>  Music</NavLink> </div>\r\n            <div className= {s.item}> <NavLink activeClassName={s.active}to= '/friends'> Friends </NavLink> </div>\r\n            <div className= {s.item}> <NavLink activeClassName={s.active}to= '/users'> Find Users </NavLink> </div>\r\n            <div className= {s.friendsBar}> <FriendsBarContainer/> </div>\r\n            <div className= {s.settings}> <NavLink activeClassName={s.active}to= '/settings'>  Settings </NavLink> </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto\r\n    from '../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg'\r\n\r\nconst DialogItem = React.memo(props => {\r\n    let UserDialogUrl = '/dialogs/' + props.id\r\n    let UserProfileUrl = '/profile/' + props.id\r\n    return (\r\n        <div>\r\n            <div className={s.Dialog}>\r\n                <NavLink to={UserProfileUrl}>\r\n                <img className={s.DialogImg} src={props.photo === null ? userPhoto : props.photo}/>\r\n            </NavLink>\r\n                <NavLink to={UserDialogUrl}>\r\n                    <span>{props.name}</span>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default DialogItem","import {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../Common/FormsControls/FormControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {FieldCreator} from \"../Common/FormsControls/FieldCreator\";\r\n\r\nlet maxLength200 = maxLengthCreator(200)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst MessageInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('messageInput', [required,maxLength200], SpecialTextArea, 'Write message', null)}\r\n        <button>add</button>\r\n    </form>\r\n}\r\n\r\nconst MessageInputReduxForm = reduxForm({form: 'messageInputer'})(MessageInputForm)\r\n\r\nexport default MessageInputReduxForm","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = React.memo(props => {\r\n    return (<div className={s.Message}>{props.body}</div>\r\n    )\r\n})\r\n\r\nexport default Message","import React from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst UserDialog = (props) => {\r\n    debugger\r\n    let MessagesElements = null\r\n    if (props.MessagesData){\r\n        MessagesElements = props.MessagesData.map(message => <Message body = {message.body} key={message.id}/>)\r\n    }\r\n    return <div>\r\n        {MessagesElements}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default UserDialog","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageInputReduxForm from \"./DialogsForm\";\r\nimport UserDialog from \"./UserDialog\";\r\nimport {SendMessage} from \"../../Redux/Reducers/DialogsReducer\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let DialogsElements = null\r\n    if (props.DialogsData) {\r\n        DialogsElements = props.DialogsData.map(dialog => <DialogItem key = {dialog.id} photo={dialog.photos.large} name={dialog.userName} id={dialog.id}/>);\r\n    }\r\n    const addMessage = (dataForm) => {\r\n        props.SendMessage(props.UserId,dataForm.messageInput)\r\n    }\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div className={s.DialogsItem}>\r\n                {DialogsElements}\r\n            </div>\r\n            <div className={s.Messages}>\r\n                <div> <UserDialog MessagesData={props.MessagesData}/></div>\r\n                <div align=\"right\" className={s.NewMessage}>\r\n                    <MessageInputReduxForm onSubmit = {addMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {AddNewDialog, SendMessage, ShowDialogs, ShowMessages} from \"../../Redux/Reducers/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nclass DialogContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (userId){\r\n            this.props.ShowMessages(userId)\r\n        }\r\n        this.props.ShowDialogs()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId){\r\n            let userId = this.props.match.params.userId\r\n            if (userId){\r\n                this.props.ShowMessages(userId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs {...this.props} DialogsData = {this.props.DialogsData}\r\n                        MessagesData = {this.props.MessagesData}\r\n                        UserId = {this.props.match.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.DialogsPage.DialogsData,\r\n        MessagesData: state.DialogsPage.MessagesData\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {AddNewDialog,ShowDialogs,ShowMessages,SendMessage}),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(DialogContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n    let [editMode, setEditeMode] = useState(false)\r\n    let [status, setStatus] = useState(props.ProfileStatus)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.ProfileStatus)\r\n    },[props.ProfileStatus])\r\n\r\n    const  activeEditMode = () => {\r\n            setEditeMode(true)\r\n    }\r\n    const deactiveEditMode = () => {\r\n        setEditeMode(false)\r\n        props.UpdateProfileStatus(status)\r\n    }\r\n    const changeInputStatus = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    if (props.IDisCurrent){\r\n\r\n    return <>\r\n        {!editMode &&\r\n        <div><span onDoubleClick={activeEditMode}>Status: <span>{props.ProfileStatus}</span></span></div>}\r\n        {editMode &&\r\n        <div><input onChange={changeInputStatus} autoFocus={true} onBlur={deactiveEditMode}\r\n                    value={status}/></div>}\r\n    </>}\r\n    else {\r\n        return <>\r\n            <div><span>Status: <span>{props.ProfileStatus}</span></span></div>\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nexport default StatusWithHooks","import {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport s from \"../../Common/FormsControls/FormControl.module.css\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\nconst SpecialInput = SpecialFormCreator('input')\r\n\r\nconst ProfileInfoInputForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('fullName', [required,maxLength100], SpecialInput, 'Write your name', {})}\r\n        {FieldCreator('aboutMe', [required], SpecialTextArea, 'About you', null)}\r\n        {FieldCreator('lookingForAJob',null, SpecialInput,null,{type: 'checkbox'},'Looking for a job:')}\r\n        {FieldCreator('lookingForAJobDescription', [required], SpecialTextArea, 'Descriptions for looking', null)}\r\n        Your contacts:\r\n        <hr></hr>\r\n        {Object.keys(props.initialValues.contacts).map(key => <ContactsProfileField key = {key} name= {key}/>)}\r\n        <button>add</button>\r\n        <button type={'button'} onClick={props.deactivateMode}>escape</button>\r\n        {props.error && <div className={s.someoneError}>\r\n            <span>{props.error}</span>\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst ContactsProfileField = ({name}) => {\r\n    return <div>\r\n        {FieldCreator('contacts.' + name, [maxLength100],SpecialInput,name, null)}\r\n    </div>\r\n}\r\n\r\n\r\nconst ProfileInfoInputReduxForm = reduxForm({form: 'ProfileInfoInput'})(ProfileInfoInputForm)\r\n\r\nexport default ProfileInfoInputReduxForm","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileDescriptionBlock = (props) => {\r\n    return  <div className={s.DescriptionBlock}>\r\n        {props.IDisCurrent && <button onClick={props.activateMode}>change profile</button>}\r\n        <div>About me: {props.ProfileInfo.aboutMe}</div>\r\n        <div>Full Name: {props.ProfileInfo.fullName}</div>\r\n        <div>Looking For A Job: {props.ProfileInfo.lookingForAJob\r\n            ? <span>Yes\r\n                <div>LookingForAJob Description: {props.ProfileInfo.lookingForAJobDescription}</div></span>\r\n            : <span>No</span>\r\n        }</div>\r\n        <div className={s.contacts}>\r\n            {Object.keys(props.ProfileInfo.contacts).map(key => <ContactsProfile key = {key} ContactTitle={key} ContactValue={props.ProfileInfo.contacts[key]}/>\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ContactsProfile = ({ContactTitle, ContactValue}) => {\r\n    return <div>\r\n        {ContactValue && <>{ContactTitle}: <a href={ContactValue}> {ContactValue}</a></>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileDescriptionBlock","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfilePhotoInputFile = (props) => {\r\n    return <div className={s.input__wrapper}>\r\n        <input onChange={props.onMainPhotoSelected} type={\"file\"} name=\"file\" id=\"input__file\" className={s.input__file} multiple/>\r\n        <label htmlFor=\"input__file\" className={s.input__file_button}>\r\n                <span className={s.input__file_icon_wrapper}><img src=\"https://i.pinimg.com/736x/55/3f/21/553f212f6a5588d90134c3f29086f2e7.jpg\"\r\n                                                                  alt=\"Сменить фото\" width=\"25\"/>\r\n                </span>\r\n            <span className={s.input__file_button_text}>Сменить фото</span>\r\n        </label>\r\n    </div>\r\n}\r\n\r\nexport default ProfilePhotoInputFile","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport UserPhoto\r\n    from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\r\nimport ProfileInfoForm from \"./ProfileInfoForm\";\r\nimport ProfileDescriptionBlock from \"./ProfileDescriptionBlock\";\r\nimport ProfilePhotoInputFile from \"./ProfilePhotoInputFile\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {submitWasSuccess} from \"../../../Redux/Reducers/ProfileReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (props.submitWasSuccess){\r\n            deactivateMode()\r\n            dispatch(submitWasSuccess(false))\r\n        }\r\n    }, [props.submitWasSuccess,dispatch])\r\n    let [ProfileEditMode, setProfileEditeMode] = useState(false)\r\n    let activateMode = () => {\r\n        setProfileEditeMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setProfileEditeMode(false)\r\n    }\r\n    let changeProfile = (data) => {\r\n        props.UpdateProfileInfo(props.CurrentUserId, data)\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveMainPhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const startDialog = () => {\r\n        props.AddNewDialog(props.ProfileInfo.userId)\r\n    }\r\n    if (!props.ProfileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    const IDisCurrent = props.ProfileInfo.userId === props.CurrentUserId\r\n    return (\r\n        <div>\r\n            {props.isFetching ? <Preloader/> :\r\n                <div><img className={s.img1}\r\n                          src={props.ProfileInfo.photos.large ? props.ProfileInfo.photos.large : UserPhoto}/>\r\n                </div>}\r\n            {IDisCurrent &&\r\n            <div className={s.inputButton}>\r\n                <ProfilePhotoInputFile onMainPhotoSelected={onMainPhotoSelected}/>\r\n            </div>\r\n            }\r\n            <div>\r\n                <StatusWithHooks UpdateProfileStatus={props.UpdateProfileStatus} ProfileStatus={props.ProfileStatus} IDisCurrent={IDisCurrent}/>\r\n            </div>\r\n            {!IDisCurrent && <button onClick={startDialog}>Start dialog</button>}\r\n            {ProfileEditMode\r\n                ? <ProfileInfoForm initialValues={props.ProfileInfo} deactivateMode={deactivateMode} onSubmit={changeProfile}/>\r\n                : <ProfileDescriptionBlock IDisCurrent = {IDisCurrent} activateMode ={activateMode} ProfileInfo={props.ProfileInfo}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    const id = props.id\n    const deleteProfilePost = () => {\n        props.deleteProfilePost(id)\n    }\n    return(<div className={s.item}>\n            <img src = 'https://avatars.mds.yandex.net/get-zen_doc/171120/pub_5b44a8cd3e56d900a85b258e_5b44aa46a2e4e400a92221a3/scale_1200'/>\n            {props.message}\n            <div><span>\n                Like {' '}\n                {props.likecount}\n            </span></div>\n            <button onClick={deleteProfilePost}>Delete</button>\n            <hr className={s.Hr}/>\n        </div>\n    );\n}\nexport default Post;","\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {SpecialFormCreator} from \"../../Common/FormsControls/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {FieldCreator} from \"../../Common/FormsControls/FieldCreator\";\r\n\r\nconst maxLength30 =  maxLengthCreator(20)\r\nconst SpecialTextArea = SpecialFormCreator('textarea')\r\n\r\nconst PostInputForm = (props) => {\r\n    if (props.submitSucceeded){\r\n        props.reset()\r\n    }\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {FieldCreator('postInput', [required,maxLength30], SpecialTextArea, 'Write new post', null)}\r\n        <button>add</button>\r\n    </form>\r\n\r\n}\r\nconst PostInputReduxForm = reduxForm({form: 'postInput'})(PostInputForm)\r\nexport default PostInputReduxForm","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport PostInputReduxForm from \"./MyPostsForm\";\n\n\nconst MyPosts = React.memo(props => {\n    console.log(props)\n    let PostsElements = [...props.PostsState].map(p => <Post deleteProfilePost = {props.deleteProfilePost} key={p.id} message={p.message} likecount={p.likecount}\n                                                        id={p.id}/>);\n    let addPost = (dataForm) => {\n        props.addNewPost(dataForm.postInput)\n    }\n    return (<div className={s.PostDescription}>\n            <h3> My posts</h3>\n            <div>\n                <PostInputReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {PostsElements}\n            </div>\n        </div>\n    );\n})\n\nexport default MyPosts;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\nimport {addNewPost, deleteProfilePost} from \"../../../Redux/Reducers/ProfileReducer\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        PostsState: state.ProfilePage.PostsData\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps,\n    {addNewPost, deleteProfilePost})(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n    let Followed = null\n    if (props.activeUser) {\n        if (props.activeUser[0]){\n            Followed = props.activeUser[0].followed\n        }\n\n    }\n\n    return (<div className={s.Profile}>\n            <ProfileInfo CurrentUserId = {props.CurrentUserId}\n                UpdateProfileStatus = {props.UpdateProfileStatus}\n                         ProfileStatus = {props.ProfileStatus}\n                         ProfileInfo={props.ProfileInfo}\n                         UpdateProfileInfo = {props.UpdateProfileInfo}\n                         saveMainPhoto = {props.saveMainPhoto}\n                         isFetching = {props.isFetching}\n                         submitWasSuccess = {props.submitWasSuccess}\n                         FollowOrUnfollow ={props.FollowOrUnfollow}\n                         Followed = {Followed}\n                         AddNewDialog = {props.AddNewDialog}\n            />\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\n\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getProfileStatus, saveMainPhoto, UpdateProfileInfo,\r\n    UpdateProfileStatus\r\n} from \"../../Redux/Reducers/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {FollowOrUnfollow} from \"../../Redux/Reducers/UsersReducer\";\r\nimport {getActiveUserFollowed, getUsersSuper} from \"../../Redux/Selectors/UsersSelector\";\r\nimport {AddNewDialog} from \"../../Redux/Reducers/DialogsReducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.CurrentUserId\r\n            this.props.getProfile(userId)\r\n            this.props.getProfileStatus(userId)\r\n\r\n        } else {\r\n            this.props.getProfileStatus(userId)\r\n            this.props.getProfile(userId)\r\n        }\r\n    }\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (!this.props.match.params.userId) {\r\n    //         this.props.getProfile(this.props.CurrentUserId)\r\n    //         this.props.getProfileStatus(this.props.CurrentUserId)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return <Profile {...this.props} ProfileInfo={this.props.ProfileInfo}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfileInfo: state.ProfilePage.ProfileInfo,\r\n        CurrentUserId: state.Auth.CurrentUserId,\r\n        ProfileStatus: state.ProfilePage.ProfileStatus,\r\n        isFetching: state.ProfilePage.isFetching,\r\n        submitWasSuccess: state.ProfilePage.submitWasSuccess,\r\n        activeUser: getActiveUserFollowed(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getProfileStatus, UpdateProfileStatus, UpdateProfileInfo, saveMainPhoto,FollowOrUnfollow, AddNewDialog\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport UserPhoto from \"../../../accepts/images/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.jpg\"\r\n\r\n\r\nconst HeaderProfile = (props) => {\r\n    const onLogOut = () => {\r\n        props.authLogOut()\r\n    }\r\n    return <div>\r\n        <button onClick={onLogOut}>Log Out</button>\r\n        {props.login}\r\n        {props.CurrentUserPhoto? <img src = {props.CurrentUserPhoto}/>: <img src = {UserPhoto}/> }\r\n    </div>\r\n}\r\n\r\nexport default HeaderProfile;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderProfile from \"./HeaderProfile/HeaderProfile\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}><NavLink to={`/profile/${props.userId}`}>\r\n            <img src='https://bumper-stickers.ru/69359-thickbox_default/logotip-atlanta-thrashers-atlanta-tresherz.jpg'/>\r\n        </NavLink>\r\n            <div className={s.login}>\r\n                {props.isAuth ?\r\n                    <HeaderProfile login={props.login}\r\n                                   CurrentUserPhoto={props.CurrentUserPhoto}\r\n                                   authLogOut = {props.authLogOut}\r\n                    />\r\n\r\n                    : <NavLink to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogOut} from \"../../Redux/Reducers/AuthReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        login: state.Auth.login,\r\n        userId: state.Auth.CurrentUserId,\r\n        isAuth: state.Auth.isAuth,\r\n        CurrentUserPhoto: state.Auth.CurrentUserPhoto\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {authLogOut})(HeaderContainer)","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst AppPreloader = () => {\r\n    return <div className={s.AppLoadingBlock}>\r\n        <img className={s.AppPreloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default AppPreloader","import React from \"react\";\r\nimport './App.css';\r\nimport store from \"./Redux/ReduxStore\";\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializedApp} from \"./Redux/Reducers/AppReducer\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport AppPreloader from \"./Components/Common/Preloader/AppPreloader\";\r\nimport {withSuspense} from \"./HOC/withSuspense\";\r\n\r\nconst Music = React.lazy(() => import(\"./Components/Music/Music\"));\r\nconst UsersContainer = React.lazy(() => import(\"./Components/Users/UsersContainer\"));\r\nconst Login = React.lazy(() => import(\"./Components/Login/Login\"));\r\nconst Friends = React.lazy(() => import(\"./Components/Friends/Friends\"));\r\nconst Settings = React.lazy(() => import(\"./Components/Settings/Settings\"));\r\nconst NewsContainer = React.lazy(() => import(\"./Components/News/NewsContainer\"));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <AppPreloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <SuspenseMainContent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MainContent = () => {\r\n    return <div className='app-wrapper-content'>\r\n        <Route path='/dialogs/:userId?' render={() => <DialogsContainer/>}/>\r\n        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n        <Route path='/users' render={() => <UsersContainer/>}/>\r\n        <Route path='/news' render={() => <NewsContainer/>}/>\r\n        <Route path='/settings' render={() => <Settings/>}/>\r\n        <Route exact path='/' render={() => <ProfileContainer/>}/>\r\n        <Route path='/music' render={() => <Music/>}/>\r\n        <Route path='/login' render={() => <Login/>}/>\r\n        <Route exact path='/friends' render={() => <Friends/>}/>\r\n    </div>\r\n}\r\nconst SuspenseMainContent = withSuspense(MainContent)\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.App.initialized\r\n})\r\nconst AppContainer = compose(\r\n    connect(mapStateToProps, {initializedApp}),\r\n    withRouter,\r\n)(App)\r\n\r\nconst FirstReactApp = () => {\r\n    return <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n}\r\n\r\nexport default FirstReactApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport FirstReactApp from \"./App\";\n\n\nReactDOM.render(\n        <FirstReactApp/>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const FieldCreator = (name, validate, component, placeholder, props, text = '') => {\r\n    return <div>\r\n        {text}\r\n        <Field name={name} validate={validate} component={component} placeholder={placeholder} {...props}/>\r\n    </div>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__299da\",\"DialogsItem\":\"Dialogs_DialogsItem__2LzZ5\",\"OnOf\":\"Dialogs_OnOf__1ykwy\",\"Dialog\":\"Dialogs_Dialog__3bHRR\",\"DialogImg\":\"Dialogs_DialogImg__1DrZT\",\"Messages\":\"Dialogs_Messages__336IC\",\"Message\":\"Dialogs_Message__16Ich\",\"active\":\"Dialogs_active__2OoQ0\",\"NewMessage\":\"Dialogs_NewMessage__1dPWM\",\"EnterMessage\":\"Dialogs_EnterMessage__TvDS4\"};","import {AuthApi, Captcha, UserAPI} from \"../../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_CURRENT_USER_PROFILE = 'SET_CURRENT_USER_PROFILE'\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_CAPTCHA_IMG = 'SET_CAPTCHA_IMG'\r\n\r\nlet InitialState = {\r\n    CurrentUserId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    CurrentUserPhoto: null,\r\n    CaptchaImg: ''\r\n}\r\n\r\nlet AuthReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case SET_CURRENT_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                CurrentUserPhoto: action.CurrentUserPhoto\r\n            }\r\n        case SET_CAPTCHA_IMG:\r\n            return {\r\n                ...state,\r\n                CaptchaImg: action.CaptchaImg\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nconst SetAuthUserData = (CurrentUserId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {CurrentUserId, email, login, isAuth}\r\n})\r\nexport const SetCurrentUserProfile = (CurrentUserPhoto) => ({type: SET_CURRENT_USER_PROFILE, CurrentUserPhoto})\r\nconst SetCaptchaImg = (CaptchaImg) => ({type: SET_CAPTCHA_IMG, CaptchaImg})\r\n\r\n\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthUser()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data\r\n        dispatch(SetAuthUserData(id, email, login, true))\r\n        let ProfileResponse = await UserAPI.getUserProfile(response.data.id)\r\n        dispatch(SetCurrentUserProfile(ProfileResponse.photos.large))\r\n    }\r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogin(email, password, rememberMe,captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUser())\r\n        dispatch(SetCaptchaImg(''))\r\n    }\r\n    else {\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        if (errorMessage === 'Incorrect anti-bot symbols'){\r\n            dispatch(ActivateCaptcha())\r\n        }\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n    }\r\n}\r\n\r\nexport const authLogOut = () => async (dispatch) => {\r\n    let response = await AuthApi.AuthLogOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(SetAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport const ActivateCaptcha = () => async (dispatch) => {\r\n    let response = await Captcha()\r\n    dispatch(SetCaptchaImg(response.data.url))\r\n}\r\n\r\n\r\nexport default AuthReducer","import React from \"react\";\r\nimport styles from './FormControl.module.css'\r\n\r\n\r\nexport const SpecialFormCreator = (Component) =>  ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return <div className={styles.formControl + ' ' + (hasError?styles.error:'')}>\r\n        <div>\r\n            <Component {...input} {...props}/>\r\n        </div>\r\n        { hasError && <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/computer-icons-user-profile-avatar-png-favpng-CXDB2aUAq6zHS7pQSY9GjQ3ZH.79eb8ca5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__12Q8B\",\"error\":\"FormControl_error__PW_OO\",\"someoneError\":\"FormControl_someoneError__2EXic\",\"CaptchaControl\":\"FormControl_CaptchaControl__35rhJ\",\"CaptchaImg\":\"FormControl_CaptchaImg__2NoGp\",\"CaptchaInput\":\"FormControl_CaptchaInput__84QcL\",\"CaptchaSpan\":\"FormControl_CaptchaSpan__12nV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__3T8h8\",\"AppPreloader\":\"Preloader_AppPreloader__1lSdQ\",\"AppLoadingBlock\":\"Preloader_AppLoadingBlock__MF2lR\"};","import {UserAPI} from \"../../Api/Api\";\r\n\r\nconst FOLLOW_TOGGLE = 'FOLLOW_USER_TOGGLE'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_FETCHING = 'SET_USERS_FETCHING'\r\nconst TOGGLE_FOLLOW_PROGRESSING = 'USERS_TOGGLE_FOLLOW_PROGRESSING'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\n\r\nlet InitialState = {\r\n    users: [],\r\n    pageSize: 30,\r\n    totalUsersCount: 19,\r\n    isFetching: false,\r\n    followIsProgressing: [],\r\n    currentPage: 1\r\n}\r\n\r\nconst UsersReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case FOLLOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOW_PROGRESSING:\r\n            return {\r\n                ...state,\r\n                followIsProgressing: action.isProgressing\r\n                    ? [...state.followIsProgressing, action.userId]\r\n                    : state.followIsProgressing.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFollowProgressing = (isProgressing, userId) => ({\r\n    type: TOGGLE_FOLLOW_PROGRESSING,\r\n    isProgressing,\r\n    userId\r\n})\r\nexport const setCurrentPageAC = (page) => ({type: SET_CURRENT_PAGE,page})\r\nexport const toggleFollow = (userId) => ({type: FOLLOW_TOGGLE, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const setFetching = (isFetching) => ({type: SET_FETCHING, isFetching})\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setFetching(true))   //активируем крутилку\r\n    let response = await UserAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setFetching(false)) //снимаем крутилку\r\n    dispatch(setUsers(response.items)) //сетаем юзеров с респонса\r\n    dispatch(setTotalUsersCount(response.totalCount))//сетаем общее число юзеров\r\n\r\n}\r\nexport const FollowOrUnfollow = (userId,follow) => async (dispatch) => {\r\n    dispatch(toggleFollowProgressing(true, userId))\r\n    if (follow){\r\n        let response = await UserAPI.followUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId))\r\n        }}\r\n    else {let response = await UserAPI.unfollowUser(userId)\r\n        if (response.resultCode === 0) {\r\n            dispatch(toggleFollow(userId))\r\n        }}\r\n    dispatch(toggleFollowProgressing(false, userId))\r\n}\r\n\r\n\r\nexport default UsersReducer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","import React from \"react\";\r\nimport PreloaderLogo from '../../../accepts/images/Bean Eater-1s-200px.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img className={s.Preloader} src={PreloaderLogo}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","module.exports = __webpack_public_path__ + \"static/media/Bean Eater-1s-200px.71c1f798.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendBar\":\"FriendBar_FriendBar__E98Ls\",\"OnOf\":\"FriendBar_OnOf__3YZDD\",\"active\":\"FriendBar_active__apofq\"};"],"sourceRoot":""}